y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Citations [N = ", nrow(db_cit),"]"),
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip() +
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m3)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction1 <- db_cit %>% ggplot2::ggplot(aes(x = Biodiversity, y = citation_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "",
y = "Citations [residuals]",
title = "Interaction sampled biodiversity * N° of moderators")+ theme_custom())
Estimates_m3
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
n_aut +
IFlog +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters::parameters(m3)
# First model (all moderators sum,ed)
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters::parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var3 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No moderators",
"Sampled biodiversity : 1 moderator",
"Sampled biodiversity : 2 moderators",
"Sampled biodiversity : 3 moderators")
Estimates_m3$Variable <- order_var3 #Rename
Estimates_m3$Variable <- factor(Estimates_m3$Variable, rev(order_var3)) #Sort
par <- parameters::parameters(m3) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", "blue")
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Citations [N = ", nrow(db_cit),"]"),
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip() +
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m3)[1]),2)), parse = TRUE)
)
db_cit <- db_cit %>% select(citation_residuals,
Biodiversity,
Moderators,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog) %>% mutate_at(vars(Biodiversity, country_diversity, IFlog), scale)
db_cit <- na.omit(db_cit)
# First model (all moderators sum,ed)
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters::parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var3 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No moderators",
"Sampled biodiversity : 1 moderator",
"Sampled biodiversity : 2 moderators",
"Sampled biodiversity : 3 moderators")
Estimates_m3$Variable <- order_var3 #Rename
Estimates_m3$Variable <- factor(Estimates_m3$Variable, rev(order_var3)) #Sort
par <- parameters::parameters(m3) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", "blue")
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Citations [N = ", nrow(db_cit),"]"),
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip() +
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m3)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction1 <- db_cit %>% ggplot2::ggplot(aes(x = Biodiversity, y = citation_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "",
y = "Citations [residuals]",
title = "Interaction sampled biodiversity * N° of moderators")+ theme_custom())
#dotchart(db_impact$citation_residuals)  #1 outlier
db_cit <- db_impact %>% filter(citation_residuals < 150) #removing outlier
db_cit <- db_cit %>% select(citation_residuals,
Biodiversity,
Moderators,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog)
db_cit <- na.omit(db_cit)
# First model (all moderators sum,ed)
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters::parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var3 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No moderators",
"Sampled biodiversity : 1 moderator",
"Sampled biodiversity : 2 moderators",
"Sampled biodiversity : 3 moderators")
Estimates_m3$Variable <- order_var3 #Rename
Estimates_m3$Variable <- factor(Estimates_m3$Variable, rev(order_var3)) #Sort
par <- parameters::parameters(m3) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", "blue")
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Citations [N = ", nrow(db_cit),"]"),
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip() +
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m3)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction1 <- db_cit %>% ggplot2::ggplot(aes(x = Biodiversity, y = citation_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "",
y = "Citations [residuals]",
title = "Interaction sampled biodiversity * N° of moderators")+ theme_custom())
db_alt <- db_impact %>% select(Altmetrics_residuals,
Biodiversity,
Moderators,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog)
db_alt <- na.omit(db_alt)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
# Estract estimates
Estimates_m4 <-
m4 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var4 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No moderators",
"Sampled biodiversity : 1 moderator",
"Sampled biodiversity : 2 moderators",
"Sampled biodiversity : 3 moderators")
Estimates_m4$Variable <- order_var4 #Rename
Estimates_m4$Variable <- factor(Estimates_m4$Variable, rev(order_var4)) #Sort
par <- parameters::parameters(m4) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", "blue")
(plot_model4 <- ggplot2::ggplot(data = Estimates_m4) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m4$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Altmetric score [N = ", nrow(db_alt),"]"),
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m4)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction2 <- db_alt %>% ggplot2::ggplot(aes(x = Biodiversity, y = Altmetrics_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "Sampled biodiversity [scaled and log-transformed]",
y = "Altmetric score [residuals]",
title = NULL)+ theme_custom())
# Check the interaction
(plot_interaction2 <- db_alt %>% ggplot2::ggplot(aes(x = Biodiversity, y = Altmetrics_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Altmetric score [residuals]",
title = NULL)+ theme_custom())
# Store the final figure
pdf(file = "Figure/Figure_4.pdf", width = 16, height = 14)
ggpubr::ggarrange(plot_model3,plot_interaction1,plot_model4,plot_interaction2,
common.legend = FALSE,
#hjust = -5,
align = "h",
labels = c("A", "B", "C", "D"),
ncol=2, nrow=2) #warnings() are due to NA removal
dev.off()
rm(col_p, sign, par)
pairs(emmeans::emmeans(m4, ~ Biodiversity : Moderators), simple=c("Moderators"))
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity + Moderators +
(1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
db_alt <- droplevels(db_alt)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators +
(1|journal)")
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity + Moderators +
(1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
db_alt$Moderators <- droplevels(db_alt$Moderators)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity + Moderators +
(1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
db_alt <- db_impact %>% select(Altmetrics_residuals,
Biodiversity,
Moderators,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog)
db_alt <- na.omit(db_alt)
db_alt$Moderators <- droplevels(db_alt$Moderators)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators
")
# Initial model
m4 <- lm::lmer(model_4, data = db_alt)
# Initial model
m4 <- lm(model_4, data = db_alt)
performance::r2(m4)
# Initial model
m4 <- lm(model_4, data = db_alt)
parameters::parameters(m4)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity * Moderators
")
m4 <- lme4::lmer(model_4, data = db_alt)
# Initial model
m4 <- lm(model_4, data = db_alt)
parameters::parameters(m4)
table(db_alt$Moderators)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity
")
# Initial model
m4 <- lm(model_4, data = db_alt)
parameters::parameters(m4)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators + (1|Journals)
")
m4 <- lme4::lmer(model_4, data = db_alt)
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
performance::r2(m4)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators + (1|journals)
")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Moderators + (1|journal)
")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
n_aut +
IFlog +
Biodiversity : Moderators
+ (1|journal)")
db_alt <- db_impact %>% select(Altmetrics_residuals,
Biodiversity,
Moderators,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
n_aut,
journal,
IFlog)
db_alt <- na.omit(db_alt)
db_alt$Moderators <- droplevels(db_alt$Moderators)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
n_aut +
IFlog +
Biodiversity : Moderators
+ (1|journal)")
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo + Title_taxon + Title_hab +
n_aut +
IFlog +
Biodiversity : Moderators + (1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ country_diversity + IFlog +
Title_geo + Title_taxon + Title_hab +
Biodiversity : Moderators
+ (1|journal)")
# Initial model
m4 <- lme4::lmer(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
pairs(emmeans::emmeans(m4, ~ Biodiversity : Moderators), simple=c("Moderators"))
# Estract estimates
Estimates_m4 <-
m4 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
Estimates_m4
