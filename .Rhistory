geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3) +
geom_point(size = 2, pch = 21, col = "grey10", fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = "grey10", fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
Estimates_m1$Variable <- c("Year of publication",
"Citations (normalized by year)",
"Domain [Terrestrial]",
"Domain [Saltwater]",
"Domain [Freshwater]",
"Geographic [Palearctic]",
"Geographic [Afrotropical]",
"Geographic [Indomalayan]",
"Geographic [Neartic]",
"Geographic [Australasian]",
"Geographic [Antartic]",
"Geographic [Neotropical]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Method [Citizen science]",
"Method [Simulation]",
"Mention of taxon - title",
"Mention of location - title",
"Mention of habitat - title")
col_p <- ifelse(Estimates_m1$p > 0.05, "grey5", ifelse(Estimates_m1$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
db_glm$cit <- db_glm$cit / db_glm$year
# Dependent var
db_glm$prop  <- rowSums(db[,36:91])
db_glm$total <- length(36:91)
#Set baseline
db_glm <- within(db_glm, Geography <- relevel(Geography, ref = "Global"))
db_glm <- within(db_glm, Domain    <- relevel(Domain, ref = "Multiple"))
db_glm <- within(db_glm, Method    <- relevel(Method, ref = "Multiple"))
#Model
m1  <- glm(cbind(prop,total) ~ year +
cit +
Domain +
Geography +
Method +
Title_geo +
Title_hab +
Title_taxon, data = db_glm, family = "binomial")
summary(m1)
# posthoc
pairs(emmeans::emmeans(m1, ~ Domain), simple="Domain")
pairs(emmeans::emmeans(m1, ~ Geography), simple="Geography")
pairs(emmeans::emmeans(m1, ~ Method), simple="Method")
sjPlot::plot_model(m1, title ="Factors correlating with biodiversity proportion",
sort.est = FALSE,  vline.color = "grey80",
show.values = TRUE, value.offset = .3, se = TRUE, show.p = TRUE) + theme_classic()
# Plot
Estimates_m1 <-
m1 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
Estimates_m1$Variable
# Subset
db_glm <- db %>% select(year = Publication_year,
n_aut,
cit = tot_cites,
Method = Method_data_collection,
Facets_biodiversity,
Title_geo,
Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain)
db_glm$Facets_biodiversity <- as.numeric(db_glm$Facets_biodiversity)
# Converting multiples
method_split <- strsplit(as.character(db_glm$Method), ";")
method <- c()
for(i in 1:length(method_split))
method <- c(method, ifelse(length(method_split[[i]]) > 1, "Multiple", method_split[[i]]) )
geography_split <- strsplit(as.character(db_glm$Geography), ";")
geography <- c()
for(i in 1:length(geography_split))
geography <- c(geography, ifelse(length(geography_split[[i]]) > 1, "Global", geography_split[[i]]) )
domain_split <- strsplit(as.character(db_glm$Domain), ";")
domain <- c()
for(i in 1:length(domain_split))
domain <- c(domain, ifelse(length(domain_split[[i]]) > 1, "Multiple", domain_split[[i]]) )
db_glm$Method    <- method
db_glm$Geography <- geography
db_glm$Domain    <- domain
db_glm <- db_glm %>% mutate_at(vars("Method","Geography","Domain",
"Title_geo","Title_hab","Title_taxon"), as_factor)
rm(method_split,method,geography,geography_split,domain,domain_split) #clean
# Correcting citation by year (NOTE:: to do better with gam)
db_glm$cit <- db_glm$cit / db_glm$year
# Dependent var
db_glm$prop  <- rowSums(db[,36:91])
db_glm$total <- length(36:91)
#Set baseline
db_glm <- within(db_glm, Geography <- relevel(Geography, ref = "Global"))
db_glm <- within(db_glm, Domain    <- relevel(Domain, ref = "Multiple"))
db_glm <- within(db_glm, Method    <- relevel(Method, ref = "Multiple"))
#Model
m1  <- glm(cbind(prop,total) ~ year +
cit +
Domain +
Geography +
Method +
Title_geo +
Title_hab +
Title_taxon, data = db_glm, family = "binomial")
summary(m1)
# posthoc
pairs(emmeans::emmeans(m1, ~ Domain), simple="Domain")
pairs(emmeans::emmeans(m1, ~ Geography), simple="Geography")
pairs(emmeans::emmeans(m1, ~ Method), simple="Method")
sjPlot::plot_model(m1, title ="Factors correlating with biodiversity proportion",
sort.est = FALSE,  vline.color = "grey80",
show.values = TRUE, value.offset = .3, se = TRUE, show.p = TRUE) + theme_classic()
# Plot
Estimates_m1 <-
m1 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
Estimates_m1$Variable <- c("Year of publication",
"Citations (normalized by year)",
"Domain [Terrestrial]",
"Domain [Saltwater]",
"Domain [Freshwater]",
"Geographic [Palearctic]",
"Geographic [Afrotropical]",
"Geographic [Indomalayan]",
"Geographic [Neartic]",
"Geographic [Australasian]",
"Geographic [Antartic]",
"Geographic [Neotropical]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Method [Citizen science]",
"Method [Simulation]",
"Mention of location - title",
"Mention of habitat - title",
"Mention of taxon/a - title")
col_p <- ifelse(Estimates_m1$p > 0.05, "grey5", ifelse(Estimates_m1$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
range(Estimates_m1$Estimate)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_rect(xmin=MIN, xmax=MAX, ymin=2, ymax=6), color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_rect(xmin=MIN, xmax=MAX, ymin=2, ymax=6, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
MIN <- range(Estimates_m1$Estimate)[1]
MAX <- range(Estimates_m1$Estimate)[2]
col_p <- ifelse(Estimates_m1$p > 0.05, "grey5", ifelse(Estimates_m1$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_rect(xmin=MIN, xmax=MAX, ymin=2, ymax=6, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
anno(geom = 'rect',xmin=MIN, xmax=MAX, ymin=2, ymax=6, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
annotate(geom = 'rect',xmin=MIN, xmax=MAX, ymin=2, ymax=6, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
annotate(geom = 'rect',xmin=2, xmax=6, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
annotate(geom = 'rect',xmin=NULL, xmax=NULL, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
#annotate(geom = 'rect',xmin=NULL, xmax=NULL, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
annotate(geom = 'rect',xmin=MIN, xmax=MAX, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
annotate(geom = 'rect',xmin=1, xmax=2, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
geom_tile(geom = 'rect',xmin=1, xmax=2, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
pdf(file = "Figure/Figure_3.pdf", width = 8, height =8)
plot_model3
dev.off()
pdf(file = "Figure/Figure_3.pdf", width = 8, height =8)
plot_model3
dev.off()
(plot_model3 <- ggplot2::ggplot(data = Estimates_m1, aes(Variable, Estimate)) +
#geom_tile(geom = 'rect',xmin=1, xmax=2, ymin=MIN, ymax=MAX, color="grey10", alpha=0.8) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_errorbar(aes(ymin = Estimate-SE, ymax = Estimate+SE), width = 0, col = col_p) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m1$Estimate,2),
vjust = -1, size = 3, col = col_p) +
geom_point(size = 2, pch = 21, col = col_p, fill = col_p) +
labs(y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + coord_flip())
pdf(file = "Figure/Figure_3.pdf", width = 8, height =8)
plot_model3
dev.off()
pdf(file = "Figure/Figure_3.pdf", width = 12, height =8)
plot_model3
dev.off()
db_glm
colnames(db)
# Subset
db_glm <- db %>% select(year = Publication_year,
n_aut,
cit = tot_cites,
Method = Method_data_collection,
Phylogenetic_div,
Functional_div,
Title_geo,
Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain)
db_glm$Facets_biodiversity <- as.numeric(db_glm$Facets_biodiversity)
# Subset
db_glm <- db %>% select(year = Publication_year,
n_aut,
cit = tot_cites,
Method = Method_data_collection,
Phylogenetic_div,
Functional_div,
Title_geo,
Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain)
db_glm$Facets_biodiversity <- as.numeric(db_glm$Facets_biodiversity)
# Subset
db_glm <- db %>% select(year = Publication_year,
n_aut,
cit = tot_cites,
Method = Method_data_collection,
Phylogenetic_div,
Functional_div,
Title_geo,
Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain)
# Converting multiples
method_split <- strsplit(as.character(db_glm$Method), ";")
method <- c()
for(i in 1:length(method_split))
method <- c(method, ifelse(length(method_split[[i]]) > 1, "Multiple", method_split[[i]]) )
geography_split <- strsplit(as.character(db_glm$Geography), ";")
geography <- c()
for(i in 1:length(geography_split))
geography <- c(geography, ifelse(length(geography_split[[i]]) > 1, "Global", geography_split[[i]]) )
domain_split <- strsplit(as.character(db_glm$Domain), ";")
domain <- c()
for(i in 1:length(domain_split))
domain <- c(domain, ifelse(length(domain_split[[i]]) > 1, "Multiple", domain_split[[i]]) )
db_glm$Method    <- method
db_glm$Geography <- geography
db_glm$Domain    <- domain
db_glm <- db_glm %>% mutate_at(vars("Method","Geography","Domain",
"Title_geo","Title_hab","Title_taxon"), as_factor)
rm(method_split,method,geography,geography_split,domain,domain_split) #clean
# Correcting citation by year (NOTE:: to do better with gam)
db_glm$cit <- db_glm$cit / db_glm$year
# Dependent var
db_glm$prop  <- rowSums(db[,36:91])
db_glm$total <- length(36:91)
table(db$Facets_biodiversity)
table(db$Facets_biodiversity)/sum(table(db$Facets_biodiversity))
(table(db$Facets_biodiversity)/sum(table(db$Facets_biodiversity)))*100
round((table(db$Facets_biodiversity)/sum(table(db$Facets_biodiversity)))*100,2)
table(db$Phylogenetic_div)
table(db$Functional_div)
table(db$Taxonomic_div)
View(db_glm)
View(db)
colnames(db)
table(db[,36])
table(db[,37])
sum(db[,37])
?apply()
apply(db[,36:86],2, sum, na.rm = TRUE)
sort(apply(db[,36:86],2, sum, na.rm = TRUE))
sort(apply(db[,36:86],2, sum, na.rm = TRUE), descending = TRUE)
?sort
sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
vector <- sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
names(vector)
aa <- ifelse(vector>15, NULL, names(vector) <- "Others")
vector <- data.frame(vector)
vector
vector <- sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
vector <- data.frame(Phyla = names(vector), vector)
vector
vector <- sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
db2 <- data.frame(Phyla = names(vector), N = vector)
db2
Taxa_to_rename <- ifelse(db2$N<10,"rename","ciao"))
Taxa_to_rename <- ifelse(db2$N<10,"rename","ciao")
Taxa_to_rename
Taxa_to_rename <- ifelse(db2$N<10,db2$N,0)
Taxa_to_rename
sum(Taxa_to_rename)
Taxa_to_rename <- ifelse(db2$N<10,db2$N,NA)
sum(Taxa_to_rename)
sum(Taxa_to_rename,na.rm=TRUE)
sum(Taxa_to_rename,na.rm=TRUE)
length(na.omit(Taxa_to_rename))
Taxa_to_rename <- ifelse(db2$N<10,db2$N,NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
db2
Taxa_to_rename
nrow(db2)
nrow(db2)-Taxa_to_rename
db2[1 : nrow(db2)-Taxa_to_rename, ]
db2[ 1 : (nrow(db2)-Taxa_to_rename), ]
db2 <- db2[ 1 : (nrow(db2)-Taxa_to_rename), ]
db2
db2 <- rbind(db2, data.frame(Phyla = paste("Others (n= ",Taxa_to_rename,")", N = N_to_rename)
db2
vector <- sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
db2 <- data.frame(Phyla = names(vector), N = vector)
Taxa_to_rename <- ifelse(db2$N<10,db2$N,NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
db2 <- db2[ 1 : (nrow(db2)-Taxa_to_rename), ]
db2 <- rbind(db2, data.frame(Phyla = paste("Others (n= ",Taxa_to_rename,")", N = N_to_rename)))
db2 <- cbind(db2, data.frame(Phyla = paste("Others (n= ",Taxa_to_rename,")", N = N_to_rename)))
db2
paste("Others (n= ",Taxa_to_rename,")"
vector <- sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
db2 <- data.frame(Phyla = names(vector), N = vector)
Taxa_to_rename <- ifelse(db2$N<10,db2$N,NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
db2 <- db2[ 1 : (nrow(db2)-Taxa_to_rename), ]
db2 <- rbind(db2, data.frame(Phyla = paste("Others (n= ",Taxa_to_rename,")"), N = N_to_rename))
db2
vector <- sort(apply(db[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
db2 <- data.frame(Phyla = names(vector), N = vector)
Taxa_to_rename <- ifelse(db2$N<10,db2$N,NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
db2 <- db2[ 1 : (nrow(db2)-Taxa_to_rename), ]
db2 <- rbind(db2, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
db2
db2 <- cbind(db2, Type = c(rep("Animal",2),
"Plant",
rep("Animal",2),
"Plant",
"Microorganism",
"Plant",
rep("Animal",3),
"Plant",
"Animal",
"Plant",
"Animal",
"Fungi",
"Microorganism",
rep("Animal",2),
"Fungi",
"Multiple"
))
db2
(figure_4 <- ggplot(db2, aes(x= Phyla, y=N))+
geom_bar(aes(fill= Type),stat="identity", alpha=0.8, colour = "black")  +
# labs(title="(c)", x=NULL, y = "Count",
#      subtitle = "News coverage by spider families")+
theme_custom()
)
figure_4
(figure_4 <- ggplot(db2, aes(x= Phyla, y=N))+
geom_bar(stat="identity", alpha=0.8, colour = "black")  +
# labs(title="(c)", x=NULL, y = "Count",
#      subtitle = "News coverage by spider families")+
theme_custom()
)
