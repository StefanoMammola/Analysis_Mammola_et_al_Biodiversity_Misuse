geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = "grey40") +
geom_boxplot(width = 0.2, col = "blue", outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom()
pdf(file = "Figure/Figure_2.pdf", width = 19, height = 14)
ggpubr::ggarrange(plot1a, plot1b, plot1c, plot1d,
common.legend = FALSE,
hjust = -5,
align = "hv",
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2) #warnings() are due to NA removal
dev.off()
#clean
rm(box1,box2,box3)
rm(plot1a, plot1b, plot1c, plot1d)
# Figure S1 (by group) --------------------------------------------------
#Loading silhouettes
animal_png <- png::readPNG("Phylopics/Animal.png")
fungi_png  <- png::readPNG("Phylopics/Fungi.png")
micro_png  <- png::readPNG("Phylopics/Micro.png")
plant_png  <- png::readPNG("Phylopics/Plant.png")
# Plotting
plot2a <- ggplot(data = db[db$Animals_prop>0,], aes(x = Publication_year, y = Animals_prop)) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3) +
geom_smooth(method = "glm", formula = y ~ x,
method.args = list(family = quasibinomial(link = "logit")),
col = "blue", fill = "blue") +
labs(title = "Only animals", x = NULL , y = Y.label)+
xlim(1992,2020)+
ylim(0,1)+
annotation_custom(grid::rasterGrob(animal_png), xmin = 1990, xmax = 1998, ymin = 0.75, ymax = 1)+
theme_custom()
plot2b <- ggplot(db[db$Plants_prop>0,], aes(x = Publication_year, y = Plants_prop)) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3) +
geom_smooth(method = "glm", formula = y ~ x,
method.args = list(family = quasibinomial(link = "logit")),
col = "blue", fill = "blue") +
labs(title = "Only plants", x = NULL , y = NULL)+
xlim(1992,2020)+
ylim(0,1)+
annotation_custom(grid::rasterGrob(plant_png), xmin = 1992, xmax = 1995, ymin = 0.75, ymax = 1)+
theme_custom()
plot2c <- ggplot(data = db[db$Fungi_prop>0,], aes(x = Publication_year, y = Fungi_prop)) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3) +
geom_smooth(method = "glm", formula = y ~ x,
method.args = list(family = quasibinomial(link = "logit")),
col = "blue", fill = "blue") +
labs(title = "Only fungi", x = "Publication year" , y = Y.label)+
xlim(1992,2020)+
ylim(0,1)+
annotation_custom(grid::rasterGrob(fungi_png), xmin = 1992, xmax = 1997, ymin = 0.75, ymax =1)+
theme_custom()
plot2d <- ggplot(data = db[db$Micro_prop>0,], aes(x = Publication_year, y = Micro_prop)) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3) +
geom_smooth(method = "glm", formula = y ~ x,
method.args = list(family = quasibinomial(link = "logit")),
col = "blue", fill = "blue") +
labs(title = "Only microorganisms", x = "Publication year" , y = NULL)+
xlim(1992,2020)+
ylim(0,1)+
annotation_custom(grid::rasterGrob(micro_png), xmin = 1992, xmax = 1997, ymin = 0.75, ymax = 1)+
theme_custom()
pdf(file = "Figure/Figure_S1.pdf", width = 16, height =12)
ggpubr::ggarrange(plot2a,plot2b,plot2c,plot2d,
common.legend = FALSE,
hjust = -5,
align = "hv",
labels = c("A", "B", "C", "D"),
ncol=2, nrow=2) #warnings() are due to NA removal
dev.off()
#clean
rm(plot2a,plot2b,plot2c,plot2d)
rm(animal_png, fungi_png, micro_png, plant_png)
# End of data exploration
#####################################################
# Data preparation: part 2 (after data exploration) #
#####################################################
# Converting multiples levels in factors
method_split <- strsplit(as.character(db2$Method_data_collection), ";")
method <- c()
for(i in 1:length(method_split))
method <- c(method, ifelse(length(method_split[[i]]) > 1, "Multiple", method_split[[i]]) )
geography_split <- strsplit(as.character(db2$Geography), ";")
geography <- c()
for(i in 1:length(geography_split))
geography <- c(geography, ifelse(length(geography_split[[i]]) > 1, "Global", geography_split[[i]]) )
domain_split <- strsplit(as.character(db2$Domain), ";")
domain <- c()
for(i in 1:length(domain_split))
domain <- c(domain, ifelse(length(domain_split[[i]]) > 1, "Multiple", domain_split[[i]]) )
db2$Method    <- method
db2$Geography <- geography
db2$Domain    <- domain
db2 <- db2 %>% mutate_at(vars("Method","Geography","Domain","Title_geo","Title_hab","Title_taxon"), as_factor)
# Set baseline
db2 <- within(db2, Geography <- relevel(Geography, ref = "Global"))
db2 <- within(db2, Domain    <- relevel(Domain,    ref = "Multiple"))
db2 <- within(db2, Method    <- relevel(Method,    ref = "Multiple"))
#clean
rm(method_split, method, geography, geography_split, domain, domain_split, i)
########################################################################
# Regression model (all data) ------------------------------------------
########################################################################
# Data exploration --------------------------------------------------------
# Subset
db_glm <- db2 %>% select(year = Publication_year,
n_aut,
citation_residuals,
Method,
Phylogenetic_div,
Functional_div,
Other_div,
Title_geo,
Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain,
country_diversity)
# Checking balancing of factors
table(db_glm$Method) #Citizen science/simulation too few records
levels(db_glm$Method)[c(6,7)] <- "Other"
table(db_glm$Geography) #Antartica a bit unbalanced
table(db_glm$Domain) #OK
db_glm <- droplevels(db_glm)
# Dependent var
db_glm$prop  <- rowSums(db2[,36:91])
db_glm$total <- length(36:91)
# Checking outliers
# par(mar= c(rep(2,4)))
# dotchart(db_glm$citation_residuals) # 1 outlier
# dotchart(db_glm$prop) #2 outliers
#db_glm <- db_glm[db_glm$citation_residuals < 200,]
db_glm <- db_glm[db_glm$prop < 20,]
# Scale continuous variables
db_glm <- db_glm %>% mutate_at(vars(year,citation_residuals,country_diversity),scale)
method_split <- strsplit(as.character(db2$Method_data_collection), ";")
method <- c()
for(i in 1:length(method_split))
method <- c(method, ifelse(length(method_split[[i]]) > 1, "Multiple", method_split[[i]]) )
geography_split <- strsplit(as.character(db2$Geography), ";")
geography <- c()
for(i in 1:length(geography_split))
geography <- c(geography, ifelse(length(geography_split[[i]]) > 1, "Global", geography_split[[i]]) )
domain_split <- strsplit(as.character(db2$Domain), ";")
domain <- c()
for(i in 1:length(domain_split))
domain <- c(domain, ifelse(length(domain_split[[i]]) > 1, "Multiple", domain_split[[i]]) )
db2$Method    <- method
db2$Geography <- geography
db2$Domain    <- domain
db2 <- db2 %>% mutate_at(vars("Method","Geography","Domain","Title_geo","Title_hab","Title_taxon"), as_factor)
# Set baseline
db2 <- within(db2, Geography <- relevel(Geography, ref = "Global"))
db2 <- within(db2, Domain    <- relevel(Domain,    ref = "Multiple"))
db2 <- within(db2, Method    <- relevel(Method,    ref = "Multiple"))
#clean
rm(method_split, method, geography, geography_split, domain, domain_split, i)
########################################################################
# Regression model (all data) ------------------------------------------
########################################################################
# Data exploration --------------------------------------------------------
# Subset
db_glm <- db2 %>% select(year = Publication_year,
n_aut,
citation_residuals,
Method,
Phylogenetic_div,
Functional_div,
Other_div,
Title_geo,
Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain,
country_diversity)
# Checking balancing of factors
table(db_glm$Method) #Citizen science/simulation too few records
levels(db_glm$Method)[c(6,7)] <- "Other"
table(db_glm$Geography) #Antartica a bit unbalanced
table(db_glm$Domain) #OK
db_glm <- droplevels(db_glm)
# Dependent var
db_glm$prop  <- rowSums(db2[,36:91])
db_glm$total <- length(36:91)
# Checking outliers
# par(mar= c(rep(2,4)))
# dotchart(db_glm$citation_residuals) # 1 outlier
# dotchart(db_glm$prop) #2 outliers
#db_glm <- db_glm[db_glm$citation_residuals < 200,]
db_glm <- db_glm[db_glm$prop < 20,]
# Scale continuous variables
db_glm <- db_glm %>% mutate_at(vars(year,citation_residuals,country_diversity),scale)
# Modelling  --------------------------------------------------------------
# Set formula
model_1 <- as.formula("prop ~
year +
Domain + Geography + Method +
Phylogenetic_div + Functional_div + Other_div +
Title_geo + Title_hab + Title_taxon + country_diversity")
#Initial model
m1  <- glm(model_1, data = db_glm, family = "poisson")
performance::check_overdispersion(m1) #overdispersed
#Refit with quasibinomial due to overdispersion
m1b  <- MASS::glm.nb(model_1, data = db_glm)
parameters::parameters(m1b, df_method="wald")
performance::check_collinearity(m1b)
performance::r2(m1b)
# PostHoc
pairs(emmeans::emmeans(m1b, ~ Domain), simple=c("Domain"))
pairs(emmeans::emmeans(m1b, ~ Geography), simple="Geography")
pairs(emmeans::emmeans(m1b, ~ Method), simple="Method")
# Estract estimates
Estimates_m1 <-
m1b %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
# Set variable order and rename
order_var1 <- c("Year of publication",
"Domain [Terrestrial]",
"Domain [Saltwater]",
"Domain [Freshwater]",
"Biogeography [Palearctic]",
"Biogeography [Afrotropical]",
"Biogeography [Indomalayan]",
"Biogeography [Neartic]",
"Biogeography [Australasian]",
"Biogeography [Neotropical]",
"Biogeography [Antartic]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Phylogenetic diversity [yes]",
"Functional diversity [yes]",
"Other diversity [yes]",
"Mention of location in title [yes]",
"Mention of habitat in title [yes]",
"Mention of taxon/a in title [yes]",
"Number of coauthors' countries")
Estimates_m1$Variable <- order_var1 #Rename
Estimates_m1$Variable <- factor(Estimates_m1$Variable, rev(order_var1)) #Sort
sign <- ifelse(Estimates_m1$p > 0.05, "", ifelse(Estimates_m1$Estimate>0.01," *", " **")) #Significance
col_p <- ifelse(Estimates_m1$p > 0.05, "grey5", ifelse(Estimates_m1$Estimate>0,"orange","blue")) #Significance
# Plot
plot_model1 <- ggplot2::ggplot(data = Estimates_m1) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m1$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Articles with biodiversity proportion > 0 [N = ",nrow(db_glm),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 2, y = -0.9, size =5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m1b)[1]),2)), parse = TRUE)
# Clean
rm(m1, m1b, sign, order_var1, model_1, col_p)
plot_model1
db_glm2 <- db2 %>% drop_na(Title_adjecties) %>%
filter(Title_adjecties == 0) %>%
select(year = Publication_year,
n_aut,
citation_residuals,
Method,
Phylogenetic_div,
Functional_div,
Other_div,
Biodiversity_prop,
Geography,
Domain,
country_diversity)
db_glm2 <- na.omit(db_glm2)
# Balance of factors
table(db_glm2$Method) #Problems!
levels(db_glm2$Method)[c(6,7)] <- "Other"
table(db_glm2$Geography) #problems!
db_glm2 <- db_glm2 %>% filter(!Geography == "Antarctic")
db_glm2$Geography <- droplevels(db_glm2$Geography)
table(db_glm2$Geography) #problems!
levels(db_glm2$Geography)[4] <-  "Afrotropical"
db_glm2$Geography <- droplevels(db_glm2$Geography)
# db_glm2$Geography2 <- db_glm2$Geography
# levels(db_glm2$Geography2)[c(2:7)] <-  c("Global North", "Global South", "Global South", "Global North", "Global North", "Global South")
# db_glm2$Geography2 <- droplevels(db_glm2$Geography2)
table(db_glm2$Domain)  #problems!
levels(db_glm2$Domain)[c(3,4)] <- "Aquatic"
db_glm2$Domain <- droplevels(db_glm2$Domain)
# Dependent var
db_glm2$prop  <- db_glm2$Biodiversity_prop*56
db_glm2$total <- length(36:91)
# Checking outliers
# par(mar= c(rep(2,4)))
# dotchart(db_glm2$citation_residuals) # OK
# dotchart(db_glm2$prop) #1 outliers
# Removing outliers
db_glm2 <- db_glm2 %>% filter(prop < 11)
# Scale continuous variables
db_glm2 <- db_glm2 %>% mutate_at(vars(year,citation_residuals,country_diversity),scale)
# Modelling  --------------------------------------------------------------
# Set formula
model_2 <- as.formula("prop ~
year +
Domain +
Geography +
Method +
Phylogenetic_div +
Functional_div +
Other_div +
country_diversity")
# Initial model
m2  <- glm(model_2, data = db_glm2, family = "poisson")
performance::check_overdispersion(m2)
parameters::parameters(m2, df_method="wald")
performance::check_collinearity(m2)
performance::r2(m2)
# PostHoc
pairs(emmeans::emmeans(m2, ~ Domain), simple=c("Domain"))
pairs(emmeans::emmeans(m2, ~ Geography), simple="Geography")
pairs(emmeans::emmeans(m2, ~ Method), simple="Method")
# Estract estimates
Estimates_m2 <-
m2 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
# Set variable order and rename
order_var2 <- c("Year of publication",
"Domain [Terrestrial]",
"Domain [Aquatic]",
"Biogeography [Palearctic]",
"Biogeography [Afrotropical]",
"Biogeography [Neartic]",
"Biogeography [Australasian]",
"Biogeography [Neotropical]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Phylogenetic diversity [yes]",
"Functional diversity [yes]",
"Other diversity [yes]",
"Number of coauthors' countries")
Estimates_m2$Variable <- order_var2 #Rename
Estimates_m2$Variable <- factor(Estimates_m2$Variable, rev(order_var2)) #sort
sign <- ifelse(Estimates_m2$p > 0.05, "", ifelse(Estimates_m2$Estimate>0.01," *", " **")) #Significance
col_p <- ifelse(Estimates_m2$p > 0.05, "grey5", ifelse(Estimates_m2$Estimate>0,"orange","blue") )
plot_model2 <- ggplot2::ggplot(data = Estimates_m2) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m2$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Articles with no moderators in the title [N = ",nrow(db_glm2),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 1.2, y = -0.7, size =5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m2)[1]),2)), parse = TRUE)
rm(m2, sign, order_var2, model_2, col_p)
vector <- sort(apply(db2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar1 <- data.frame(Phyla = names(vector), N = vector)
threshold <- 10 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar1$N < threshold, bar1$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm = TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar1 <- bar1[ 1 : (nrow(bar1)-Taxa_to_rename), ]
bar1 <- rbind(bar1, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar1 <- cbind(bar1, Type = c(rep("Animal",2),
"Plant",
rep("Animal",2),
"Plant",
"Microorganism",
"Plant",
rep("Animal",3),
rep("Plant",2),
"Animal",
"Fungi", #ascoo
rep("Animal",2),
"Multiple",
"Fungi",
"Multiple"))
bar1$Phyla <- factor(bar1$Phyla,levels = bar1$Phyla)
levels(bar1$Phyla)[18] <- "Protista *"
col_bar <- rev(RColorBrewer::brewer.pal(5, "Blues"))
barchart1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = "none")+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
rm(Taxa_to_rename, N_to_rename, vector, bar1, threshold)
## Only with titles containong no moderators
bar2 <- db2[db2$Title_adjecties == 0,]
vector <- sort(apply(bar2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar2 <- data.frame(Phyla = names(vector), N = vector)
threshold2 <- 3 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar2$N < threshold2, bar2$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar2 <- bar2[ 1 : (nrow(bar2)-Taxa_to_rename), ]
bar2 <- rbind(bar2, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar2 <- cbind(bar2, Type = c(rep("Animal",2),
rep("Plant",2),
"Microorganism",
rep("Animal",3),
rep("Plant",2),
rep("Animal",2),
"Multiple"))
bar2$Phyla <- factor(bar2$Phyla, levels = bar2$Phyla)
col_bar2 <- col_bar[c(1,3:5)]
barchart2 <- ggplot(bar2, aes(x = Phyla, y = N))+
geom_bar(aes(fill = Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar2) +
theme_custom() +
theme(legend.position = c(0.75,0.45)) +
coord_flip() +
annotate(geom = "text", y = bar2[nrow(bar2),2] + 1,
x = nrow(bar2),
label = paste0("Phyla/division with sample size < ",threshold2),
hjust = 0)
barchart2
barchart2 <- ggplot(bar2, aes(x = Phyla, y = N))+
geom_bar(aes(fill = Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar2) +
theme_custom() +
theme(legend.position = "none") +
coord_flip() +
annotate(geom = "text", y = bar2[nrow(bar2),2] + 1,
x = nrow(bar2),
label = paste0("Phyla/division with sample size < ",threshold2),
hjust = 0)
barchart1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
vector <- sort(apply(db2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar1 <- data.frame(Phyla = names(vector), N = vector)
threshold <- 10 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar1$N < threshold, bar1$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm = TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar1 <- bar1[ 1 : (nrow(bar1)-Taxa_to_rename), ]
bar1 <- rbind(bar1, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar1 <- cbind(bar1, Type = c(rep("Animal",2),
"Plant",
rep("Animal",2),
"Plant",
"Microorganism",
"Plant",
rep("Animal",3),
rep("Plant",2),
"Animal",
"Fungi", #ascoo
rep("Animal",2),
"Multiple",
"Fungi",
"Multiple"))
bar1$Phyla <- factor(bar1$Phyla,levels = bar1$Phyla)
levels(bar1$Phyla)[18] <- "Protista *"
col_bar <- rev(RColorBrewer::brewer.pal(5, "Blues"))
barchart1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
barchart1
# Save
pdf(file = "Figure/Figure_3.pdf", width = 15, height = 16)
ggpubr::ggarrange(plot_model1,barchart1,plot_model2,barchart2,
common.legend = FALSE,
#hjust = -5,
align = "h",
labels = c("A", "B", "C", "D"),
ncol=2, nrow=2) #warnings() are due to NA removal
dev.off()
rm(Taxa_to_rename, N_to_rename, vector, col_bar, col_bar2, bar2, threshold2)
