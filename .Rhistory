Title_hab,
Title_taxon,
Title_adjecties,
Biodiversity_prop,
Geography,
Domain,
country_diversity)
# Checking balancing of factors
table(db_glm$Method) #Citizen science/simulation too few records
table(db_glm$Geography) #Antartica a bit unbalanced
table(db_glm$Domain) #OK
levels(db_glm$Domain)[c(3,4)] <- "Aquatic"
db_glm <- droplevels(db_glm)
# Dependent var
db_glm$prop  <- rowSums(db2[,36:91])
db_glm$total <- length(36:91)
db_outliers <- db2[db2$Biodiversity_prop > 0.3,]
quantile(db_outliers$Biodiversity_prop)
db_outliers$title
db_outliers$Biodiversity_prop
#db_glm <- db_glm[db_glm$citation_residuals < 200,]
db_glm <- db_glm[db_glm$prop < 20,]
# Scale continuous variables
db_glm <- db_glm %>% mutate_at(vars(year,citation_residuals,country_diversity),scale)
# Set formula
model_1 <- as.formula("prop ~
year +
Domain + Geography + Method +
Phylogenetic_div + Functional_div + Other_div +
Title_geo + Title_hab + Title_taxon")
#Initial model
m1  <- glm(model_1, data = db_glm, family = "poisson")
performance::check_overdispersion(m1) #overdispersed
#Refit with quasibinomial due to overdispersion
m1b  <- MASS::glm.nb(model_1, data = db_glm)
parameters::parameters(m1b, df_method = "wald")
performance::check_collinearity(m1b)
performance::r2(m1b)
# PostHoc
pairs(emmeans::emmeans(m1b, ~ Domain), simple = c("Domain"))
pairs(emmeans::emmeans(m1b, ~ Geography), simple = "Geography")
pairs(emmeans::emmeans(m1b, ~ Method), simple = "Method")
# Estract estimates
Estimates_m1 <-
m1b %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
# Set variable order and rename
order_var1 <- c("Year of publication",
"Domain [Terrestrial]",
"Domain [Aquatic]",
"Biogeography [Palearctic]",
"Biogeography [Afrotropical]",
"Biogeography [Indomalayan]",
"Biogeography [Neartic]",
"Biogeography [Australasian]",
"Biogeography [Neotropical]",
"Biogeography [Antartic]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Phylogenetic diversity [yes]",
"Functional diversity [yes]",
"Other diversity [yes]",
"Mention of location in title [yes]",
"Mention of habitat in title [yes]",
"Mention of taxon/a in title [yes]")
Estimates_m1$Variable <- order_var1 #Rename
Estimates_m1$Variable <- factor(Estimates_m1$Variable, rev(order_var1)) #Sort
sign <- ifelse(Estimates_m1$p > 0.05, "", ifelse(Estimates_m1$Estimate>0.01," *", " **")) #Significance
col_p <- ifelse(Estimates_m1$p > 0.05, "grey5", ifelse(Estimates_m1$Estimate>0,"orange",Col_custom[1])) #Significance
# Plot
plot_model1 <- ggplot2::ggplot(data = Estimates_m1) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m1$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Articles with biodiversity proportion > 0 [N = ",nrow(db_glm),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 2, y = -0.9, size =5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m1b)[1]),2)), parse = TRUE)
plot_model1
# Clean
rm(m1, m1b, sign, order_var1, model_1, col_p)
# Repeating the analysis only with generic titles (no Qualifier)
db_glm2 <- db2 %>% drop_na(Title_adjecties) %>%
filter(Title_adjecties == 0) %>%
select(year = Publication_year,
n_aut,
citation_residuals,
Method,
Phylogenetic_div,
Functional_div,
Other_div,
Biodiversity_prop,
Geography,
Domain,
country_diversity)
db_glm2 <- na.omit(db_glm2)
table(db_glm2$Method)
table(db_glm2$Geography) #problems!
db_glm2 <- db_glm2 %>% filter(!Geography == "Antarctic")
db_glm2$Geography <- droplevels(db_glm2$Geography)
table(db_glm2$Geography) #problems!
levels(db_glm2$Geography)[4] <-  "Afrotropical"
db_glm2$Geography <- droplevels(db_glm2$Geography)
table(db_glm2$Domain)  #problems!
levels(db_glm2$Domain)[c(3,4)] <- "Aquatic"
db_glm2$Domain <- droplevels(db_glm2$Domain)
# Dependent var
db_glm2$prop  <- db_glm2$Biodiversity_prop*56
db_glm2$total <- length(36:91)
# Removing outliers
db_glm2 <- db_glm2 %>% filter(prop < 11)
# Scale continuous variables
db_glm2 <- db_glm2 %>% mutate_at(vars(year,citation_residuals,country_diversity),scale)
# Set formula
model_2 <- as.formula("prop ~
year +
Domain +
Geography +
Method +
Phylogenetic_div +
Functional_div +
Other_div")
# Initial model
m2  <- glm(model_2, data = db_glm2, family = "poisson")
performance::check_overdispersion(m2)
parameters::parameters(m2, df_method="wald")
performance::check_collinearity(m2)
performance::r2(m2)
# PostHoc
pairs(emmeans::emmeans(m2, ~ Domain), simple=c("Domain"))
pairs(emmeans::emmeans(m2, ~ Geography), simple="Geography")
pairs(emmeans::emmeans(m2, ~ Method), simple="Method")
# Estract estimates
Estimates_m2 <-
m2 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
# Set variable order and rename
order_var2 <- c("Year of publication",
"Domain [Terrestrial]",
"Domain [Aquatic]",
"Biogeography [Palearctic]",
"Biogeography [Afrotropical]",
"Biogeography [Neartic]",
"Biogeography [Australasian]",
"Biogeography [Neotropical]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Phylogenetic diversity [yes]",
"Functional diversity [yes]",
"Other diversity [yes]")
Estimates_m2$Variable <- order_var2 #Rename
Estimates_m2$Variable <- factor(Estimates_m2$Variable, rev(order_var2)) #sort
sign <- ifelse(Estimates_m2$p > 0.05, "", ifelse(Estimates_m2$Estimate>0.01," *", " **")) #Significance
col_p <- ifelse(Estimates_m2$p > 0.05, "grey5", ifelse(Estimates_m2$Estimate>0,"orange",Col_custom[1]) )
plot_model2 <- ggplot2::ggplot(data = Estimates_m2) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m2$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Articles with no descriptors in the title [N = ", nrow(db_glm2),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 1.2, y = -0.7, size =5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m2)[1]),2)), parse = TRUE)
rm(m2, sign, order_var2, model_2, col_p)
vector <- sort(apply(db2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar1 <- data.frame(Phyla = names(vector), N = vector)
threshold <- 10 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar1$N < threshold, bar1$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm = TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar1 <- bar1[ 1 : (nrow(bar1)-Taxa_to_rename), ]
bar1 <- rbind(bar1, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar1 <- cbind(bar1, Type = c(rep("Animals",2),
"Plants",
rep("Animals",2),
"Plants",
"Microorganisms",
"Plants",
rep("Animals",3),
rep("Plants",2),
"Animals",
"Fungi", #ascoo
rep("Animals",2),
"Multiple",
"Fungi",
"Multiple"))
bar1$Phyla <- factor(bar1$Phyla,levels = bar1$Phyla)
levels(bar1$Phyla)[18] <- "Protista *"
col_bar <- rev(RColorBrewer::brewer.pal(5, "Blues"))
barchart1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
barchart1
rm(Taxa_to_rename, N_to_rename, vector, bar1, threshold)
bar2 <- db2[db2$Title_adjecties == 0,]
vector <- sort(apply(bar2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar2 <- data.frame(Phyla = names(vector), N = vector)
threshold2 <- 3 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar2$N < threshold2, bar2$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar2 <- bar2[ 1 : (nrow(bar2)-Taxa_to_rename), ]
bar2 <- rbind(bar2, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar2 <- cbind(bar2, Type = c(rep("Animals",2),
rep("Plants",2),
"Microorganisms",
rep("Animals",3),
rep("Plants",2),
rep("Animals",2),
"Multiple"))
bar2$Phyla <- factor(bar2$Phyla, levels = bar2$Phyla)
col_bar2 <- col_bar[c(1,3:5)]
barchart2 <- ggplot(bar2, aes(x = Phyla, y = N))+
geom_bar(aes(fill = Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar2) +
theme_custom() +
theme(legend.position = "none") +
coord_flip() +
annotate(geom = "text", y = bar2[nrow(bar2),2] + 1,
x = nrow(bar2),
label = paste0("Phyla/division with sample size < ",threshold2),
hjust = 0)
# Save
pdf(file = "Figure/Figure_3.pdf", width = 15, height = 16)
ggpubr::ggarrange(plot_model1,barchart1,plot_model2,barchart2,
common.legend = FALSE,
#hjust = -5,
align = "h",
labels = c("A", "B", "C", "D"),
ncol=2, nrow=2) #warnings() are due to NA removal
dev.off()
rm(Taxa_to_rename, N_to_rename, vector, col_bar, col_bar2, bar2, threshold2)
Estimates_m2
Estimates_m1
write.csv(Estimates_m1,"TableS1.csv")
write.csv(Estimates_m1,"Tables/TableS1.csv")
# Save the table
write.csv(Estimates_m2,"Tables/TableS2.csv")
db_cit <- db_impact %>% select(citation_residuals,
Biodiversity,
Descriptors,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog) %>% filter(citation_residuals < 150)
db2$bio <- db2$Biodiversity_prop*56
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity = bio,
Descriptors = Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal,
IF,
country_diversity) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor)
#%>%
#                        mutate_at(vars(n_aut, year, country_diversity, IF), scale)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Descriptors)  <- c("None","One descriptor", "Two descriptors", "Three descriptors")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
#Random factor levels
nlevels(db_impact$journal) #281
# Collinearity
psych::pairs.panels(db_impact %>% as.data.frame %>% select(n_aut, country_diversity, IF, Altmetrics_residuals, citation_residuals))
#Dropping country diversity
# Checking outliers
#dotchart(db_impact$Biodiversity) #1 outliers
#dotchart(db_impact$country_diversity)
#dotchart(db_impact$n_aut)
#dotchart(db_impact$IF)
db_impact$Biodiversity      <- log(db_impact$Biodiversity+1) #log transform
db_impact$IFlog             <- log(db_impact$IF+1) #log transform
db_impact$n_aut             <- log(db_impact$n_aut+1) #log transform
db_impact$country_diversity <- log(db_impact$country_diversity+1) #log transform
# What's the relationship between altmetrics and citations
db_impact %>% ggplot2::ggplot(aes(x = log(Altmetrics_residuals+1), y = log(citation_residuals+1))) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3) +
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
theme_custom()
# Testing Citations -----------------------------------------------------------
#Check outliers
par(mar= c(rep(2,4)))
#dotchart(db_impact$citation_residuals)  #1 outlier
db_cit <- db_impact %>% select(citation_residuals,
Biodiversity,
Descriptors,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog) %>% filter(citation_residuals < 150)
db_cit <- na.omit(db_cit)
# First model (all descriptors sum,ed)
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Descriptors") #(1|journal)"
m3  <- lm(model_3, data = db_impact)
parameters::parameters(m3)
performance::r2(m3)
performance::check_model(m3)
#normality or residuals
hist(resid(m3), breaks = 200) #ok, just a bit of tail
#Contrast
pairs(emmeans::emmeans(m3, ~ Biodiversity : Descriptors), simple=c("Descriptors"))
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var3 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No descriptors",
"Sampled biodiversity : 1 descriptor",
"Sampled biodiversity : 2 descriptors",
"Sampled biodiversity : 3 descriptors")
Estimates_m3$Variable <- order_var3 #Rename
Estimates_m3$Variable <- factor(Estimates_m3$Variable, rev(order_var3)) #Sort
par <- parameters::parameters(m3) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", Col_custom[1])
#Set variable order and rename
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Citations [N = ", nrow(db_cit),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip() +
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m3)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction1 <- db_cit %>% ggplot2::ggplot(aes(x = Biodiversity, y = citation_residuals)) +
facet_wrap( ~ Descriptors, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 3, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = Col_custom[1], fill = Col_custom[1],
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Citations [residuals]",
title = "Interaction sampled biodiversity * N° of descriptors")+ theme_custom())
# Save the table
write.csv(Estimates_m3,"Tables/TableS3.csv")
db_alt <- db_impact %>% select(Altmetrics_residuals,
Biodiversity,
Descriptors,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog)
db_alt <- na.omit(db_alt)
db_alt$Descriptors <- droplevels(db_alt$Descriptors)
# Checking outliers
# par(mar= c(rep(2,4)))
# dotchart(db_alt$Altmetrics_residuals) # OK
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Descriptors ")
# model_4 <- as.formula("Altmetrics_residuals ~
#                                               country_diversity +
#                                               IF +
#                                               Biodiversity : Title_geo +
#                                               Biodiversity : Title_hab +
#                                               Biodiversity : Title_taxon +
#                                               (1|journal)")
# Initial model
m4 <- lm(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
#Collinearity
performance::check_model(m4)
#normality or residuals
hist(resid(m4), breaks = 200) #ok, just a bit of tail
#Contrast
pairs(emmeans::emmeans(m4, ~ Biodiversity : Descriptors), simple=c("Descriptors"))
# Estract estimates
Estimates_m4 <-
m4 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var4 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No descriptors",
"Sampled biodiversity : 1 descriptor",
"Sampled biodiversity : 2 descriptors",
"Sampled biodiversity : 3 descriptors")
Estimates_m4$Variable <- order_var4 #Rename
Estimates_m4$Variable <- factor(Estimates_m4$Variable, rev(order_var4)) #Sort
par <- parameters::parameters(m4) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", Col_custom[1])
(plot_model4 <- ggplot2::ggplot(data = Estimates_m4) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m4$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Altmetric score [N = ", nrow(db_alt),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m4)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction2 <- db_alt %>% ggplot2::ggplot(aes(x = Biodiversity, y = Altmetrics_residuals)) +
facet_wrap( ~ Descriptors, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 3, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = Col_custom[1], fill = Col_custom[1],
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Altmetric score [residuals]",
title = NULL)+ theme_custom())
# Save the table
write.csv(Estimates_m4,"Tables/TableS4.csv")
Estimates_m4
round(Estimates_m4,3)
# Save the table
Estimates_m4[,-1] <- round(Estimates_m4[,-1],3)
Estimates_m4
write.csv(Estimates_m4,"Tables/TableS4.csv")
# Save the table
Estimates_m1[,-1] <- round(Estimates_m1[,-1],3)
write.csv(Estimates_m1,"Tables/TableS1.csv")
# Save the table
Estimates_m2[,-1] <- round(Estimates_m2[,-1],3)
write.csv(Estimates_m2,"Tables/TableS2.csv")
# Save the table
Estimates_m3[,-1] <- round(Estimates_m3[,-1],3)
write.csv(Estimates_m3,"Tables/TableS3.csv")
