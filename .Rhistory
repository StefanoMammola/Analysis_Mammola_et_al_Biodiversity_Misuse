n_aut,
journal,
IF,
country_diversity) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor)
#%>%
#                        mutate_at(vars(n_aut, year, country_diversity, IF), scale)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Descriptors)  <- c("None","One descriptor", "Two descriptors", "Three descriptors")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
#Random factor levels
nlevels(db_impact$journal) #281
# Collinearity
psych::pairs.panels(db_impact %>% as.data.frame %>% select(n_aut, country_diversity, IF, Altmetrics_residuals, citation_residuals))
#Dropping country diversity
# Checking outliers
#dotchart(db_impact$Biodiversity) #1 outliers
#dotchart(db_impact$country_diversity)
#dotchart(db_impact$n_aut)
#dotchart(db_impact$IF)
db_impact$Biodiversity      <- log(db_impact$Biodiversity+1) #log transform
db_impact$IFlog             <- log(db_impact$IF+1) #log transform
db_impact$n_aut             <- log(db_impact$n_aut+1) #log transform
db_impact$country_diversity <- log(db_impact$country_diversity+1) #log transform
# What's the relationship between altmetrics and citations
db_impact %>% ggplot2::ggplot(aes(x = log(Altmetrics_residuals+1), y = log(citation_residuals+1))) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3) +
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
theme_custom()
# Testing Citations -----------------------------------------------------------
#Check outliers
par(mar= c(rep(2,4)))
#dotchart(db_impact$citation_residuals)  #1 outlier
db_cit <- db_impact %>% select(citation_residuals,
Biodiversity,
Descriptors,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog) %>% filter(citation_residuals < 150)
db_cit <- na.omit(db_cit)
# First model (all descriptors sum,ed)
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Descriptors") #(1|journal)"
m3  <- lm(model_3, data = db_impact)
parameters::parameters(m3)
performance::r2(m3)
performance::check_model(m3)
#normality or residuals
hist(resid(m3), breaks = 200) #ok, just a bit of tail
#Contrast
pairs(emmeans::emmeans(m3, ~ Biodiversity : Descriptors), simple=c("Descriptors"))
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var3 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No descriptors",
"Sampled biodiversity : 1 descriptor",
"Sampled biodiversity : 2 descriptors",
"Sampled biodiversity : 3 descriptors")
Estimates_m3$Variable <- order_var3 #Rename
Estimates_m3$Variable <- factor(Estimates_m3$Variable, rev(order_var3)) #Sort
par <- parameters::parameters(m3) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", Col_custom[1])
#Set variable order and rename
(plot1c <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Dependent variable: Citations [N = ", nrow(db_cit),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip() +
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m3)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction1 <- db_cit %>% ggplot2::ggplot(aes(x = Biodiversity, y = citation_residuals)) +
facet_wrap( ~ Descriptors, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 3, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = Col_custom[1], fill = Col_custom[1],
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Citations [residuals]",
title = "Interaction sampled biodiversity * NÂ° of descriptors")+ theme_custom())
# Testing Altmetric -------------------------------------------------------
db_alt <- db_impact %>% select(Altmetrics_residuals,
Biodiversity,
Descriptors,
Title_geo,
Title_taxon,
Title_hab,
country_diversity,
journal,
IFlog)
db_alt <- na.omit(db_alt)
db_alt$Descriptors <- droplevels(db_alt$Descriptors)
# Checking outliers
# par(mar= c(rep(2,4)))
# dotchart(db_alt$Altmetrics_residuals) # OK
# Set formula
model_4 <- as.formula("Altmetrics_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
IFlog +
Biodiversity : Descriptors ")
# model_4 <- as.formula("Altmetrics_residuals ~
#                                               country_diversity +
#                                               IF +
#                                               Biodiversity : Title_geo +
#                                               Biodiversity : Title_hab +
#                                               Biodiversity : Title_taxon +
#                                               (1|journal)")
# Initial model
m4 <- lm(model_4, data = db_alt)
performance::r2(m4)
parameters::parameters(m4)
#Collinearity
performance::check_model(m4)
#normality or residuals
hist(resid(m4), breaks = 200) #ok, just a bit of tail
#Contrast
pairs(emmeans::emmeans(m4, ~ Biodiversity : Descriptors), simple=c("Descriptors"))
# Estract estimates
Estimates_m4 <-
m4 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
# Set variable order and rename
order_var4 <- c("Mention of location in title [no]",
"Mention of taxon/a in title [no]",
"Mention of habitat in title [no]",
"Number of coauthors' countries",
"Impact factor",
"Sampled biodiversity : No descriptors",
"Sampled biodiversity : 1 descriptor",
"Sampled biodiversity : 2 descriptors",
"Sampled biodiversity : 3 descriptors")
Estimates_m4$Variable <- order_var4 #Rename
Estimates_m4$Variable <- factor(Estimates_m4$Variable, rev(order_var4)) #Sort
par <- parameters::parameters(m4) %>%
dplyr::filter(!row_number() %in% 1)
par <- na.omit(par$p)
sign <- ifelse(par > 0.05, "", ifelse(par > 0.01," *", " **")) #Significance
col_p <- ifelse(par > 0.05, "grey5", Col_custom[1])
(plot1d <- ggplot2::ggplot(data = Estimates_m4) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = paste0(round(Estimates_m4$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = paste0("Dependent variable: Altmetric score [N = ", nrow(db_alt),"]"),
y = expression(paste("Effect size" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()+
annotate(geom = 'text', x = 1, y = 7.5, size = 5,
label = paste0("R^2 ==",round(as.numeric(performance::r2(m4)[1]),2)), parse = TRUE)
)
# Check the interaction
(plot_interaction2 <- db_alt %>% ggplot2::ggplot(aes(x = Biodiversity, y = Altmetrics_residuals)) +
facet_wrap( ~ Descriptors, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 3, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = Col_custom[1], fill = Col_custom[1],
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Altmetric score [residuals]",
title = NULL)+ theme_custom())
# Store the final figure
pdf(file = "Figure_Current_Biology/Figure_1.pdf", width = 18, height = 14)
ggpubr::ggarrange(plot1a,plot1b,plot1c,plot1d,
common.legend = FALSE,
align = "h",
labels = c("A", "B", "C", "D"),
ncol=2, nrow=2) #warnings() are due to NA removal
dev.off()
# Store the final figure
pdf(file = "Figure_Current_Biology/Figure_1.pdf", width = 18, height = 15)
ggpubr::ggarrange(plot1a,plot1b,plot1c,plot1d,
common.legend = FALSE,
align = "h",
labels = c("A", "B", "C", "D"),
ncol=2, nrow=2) #warnings() are due to NA removal
dev.off()
vector <- sort(apply(db2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar1 <- data.frame(Phyla = names(vector), N = vector)
threshold <- 10 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar1$N < threshold, bar1$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm = TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar1 <- bar1[ 1 : (nrow(bar1)-Taxa_to_rename), ]
bar1 <- rbind(bar1, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar1 <- cbind(bar1, Type = c(rep("Animals",2),
"Plants",
rep("Animals",2),
"Plants",
"Microorganisms",
"Plants",
rep("Animals",3),
rep("Plants",2),
"Animals",
"Fungi", #ascoo
rep("Animals",2),
"Multiple",
"Fungi",
"Multiple"))
bar1$Phyla <- factor(bar1$Phyla,levels = bar1$Phyla)
levels(bar1$Phyla)[18] <- "Protista *"
col_bar <- rev(RColorBrewer::brewer.pal(5, "Blues"))
S1c <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
rm(Taxa_to_rename, N_to_rename, vector, bar1, threshold)
bar2 <- db2[db2$Title_adjecties == 0,]
vector <- sort(apply(bar2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar2 <- data.frame(Phyla = names(vector), N = vector)
threshold2 <- 3 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar2$N < threshold2, bar2$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar2 <- bar2[ 1 : (nrow(bar2)-Taxa_to_rename), ]
bar2 <- rbind(bar2, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar2 <- cbind(bar2, Type = c(rep("Animals",2),
rep("Plants",2),
"Microorganisms",
rep("Animals",3),
rep("Plants",2),
rep("Animals",2),
"Multiple"))
bar2$Phyla <- factor(bar2$Phyla, levels = bar2$Phyla)
col_bar2 <- col_bar[c(1,3:5)]
plot1c_bis <- ggplot(bar2, aes(x = Phyla, y = N))+
geom_bar(aes(fill = Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar2) +
theme_custom() +
theme(legend.position = "none") +
coord_flip() +
annotate(geom = "text", y = bar2[nrow(bar2),2] + 1,
x = nrow(bar2),
label = paste0("Phyla/division with sample size < ",threshold2),
hjust = 0)
# Checking distribution by region, method and system
(plotS1a <- db2 %>%
drop_na(Geography,Biodiversity_prop) %>%
#filter(Biodiversity_prop < 0.4) %>%  #removing 1 outlier
ggplot(aes(x = Geography, y = Biodiversity_prop)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 1, fill = RColorBrewer::brewer.pal(5, "Blues")[5], col = "white", adjust = 1.5) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = RColorBrewer::brewer.pal(5, "Blues")[3]) +
geom_boxplot(width = 0.2,  col = RColorBrewer::brewer.pal(5, "Blues")[5], outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom() + theme(axis.text.y = element_text(size = 15)) + coord_flip())
(plotS1b <- db2 %>%
drop_na(Domain,Biodiversity_prop) %>%
ggplot(aes(x = Domain, y = Biodiversity_prop)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 1, fill= RColorBrewer::brewer.pal(5, "Blues")[5], col = "white", adjust = 1.5) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = RColorBrewer::brewer.pal(5, "Blues")[3]) +
geom_boxplot(width = 0.2, col = RColorBrewer::brewer.pal(5, "Blues")[5], outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom() + theme(axis.text.y = element_text(size = 15)) + coord_flip())
levels(db2$Method)[c(6,7)] <- "Other"
(plotS1c <- db2 %>%
drop_na(Method,Biodiversity_prop) %>%
ggplot(aes(x = Method, y = Biodiversity_prop)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 1, fill= RColorBrewer::brewer.pal(5, "Blues")[5], col = "white", adjust = 1.5) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = RColorBrewer::brewer.pal(5, "Blues")[3]) +
geom_boxplot(width = 0.2, col = RColorBrewer::brewer.pal(5, "Blues")[5], outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom() + theme(axis.text.y = element_text(size = 15)) + coord_flip())
bar1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
vector <- sort(apply(db2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar1 <- data.frame(Phyla = names(vector), N = vector)
threshold <- 10 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar1$N < threshold, bar1$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm = TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar1 <- bar1[ 1 : (nrow(bar1)-Taxa_to_rename), ]
bar1 <- rbind(bar1, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar1 <- cbind(bar1, Type = c(rep("Animals",2),
"Plants",
rep("Animals",2),
"Plants",
"Microorganisms",
"Plants",
rep("Animals",3),
rep("Plants",2),
"Animals",
"Fungi", #ascoo
rep("Animals",2),
"Multiple",
"Fungi",
"Multiple"))
bar1$Phyla <- factor(bar1$Phyla,levels = bar1$Phyla)
levels(bar1$Phyla)[18] <- "Protista *"
col_bar <- rev(RColorBrewer::brewer.pal(5, "Blues"))
bar1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
rm(Taxa_to_rename, N_to_rename, vector, bar1, threshold)
bar2 <- db2[db2$Title_adjecties == 0,]
vector <- sort(apply(bar2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar2 <- data.frame(Phyla = names(vector), N = vector)
threshold2 <- 3 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar2$N < threshold2, bar2$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar2 <- bar2[ 1 : (nrow(bar2)-Taxa_to_rename), ]
bar2 <- rbind(bar2, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar2 <- cbind(bar2, Type = c(rep("Animals",2),
rep("Plants",2),
"Microorganisms",
rep("Animals",3),
rep("Plants",2),
rep("Animals",2),
"Multiple"))
bar2$Phyla <- factor(bar2$Phyla, levels = bar2$Phyla)
col_bar2 <- col_bar[c(1,3:5)]
bar2 <- ggplot(bar2, aes(x = Phyla, y = N))+
geom_bar(aes(fill = Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar2) +
theme_custom() +
theme(legend.position = "none") +
coord_flip() +
annotate(geom = "text", y = bar2[nrow(bar2),2] + 1,
x = nrow(bar2),
label = paste0("Phyla/division with sample size < ",threshold2),
hjust = 0)
pdf(file = "Figure/Figure_S2.pdf", width = 14, height = 10)
ggpubr::ggarrange(plotS1a, plotS1b, plotS1c, bar1,
common.legend = FALSE,
hjust = -5,
align = "hv",
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2) #warnings() are due to NA removal
dev.off()
vector <- sort(apply(db2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar1 <- data.frame(Phyla = names(vector), N = vector)
threshold <- 10 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar1$N < threshold, bar1$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm = TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar1 <- bar1[ 1 : (nrow(bar1)-Taxa_to_rename), ]
bar1 <- rbind(bar1, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar1 <- cbind(bar1, Type = c(rep("Animals",2),
"Plants",
rep("Animals",2),
"Plants",
"Microorganisms",
"Plants",
rep("Animals",3),
rep("Plants",2),
"Animals",
"Fungi", #ascoo
rep("Animals",2),
"Multiple",
"Fungi",
"Multiple"))
bar1$Phyla <- factor(bar1$Phyla,levels = bar1$Phyla)
levels(bar1$Phyla)[18] <- "Protista *"
col_bar <- rev(RColorBrewer::brewer.pal(5, "Blues"))
barS1 <- ggplot(bar1, aes(x = Phyla, y = N))+
geom_bar(aes(fill= Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar)+
theme_custom()+
theme(legend.position = c(0.75,0.45))+
coord_flip()+
annotate(geom = "text", y = bar1[nrow(bar1),2] + 2,
x = nrow(bar1),
label = paste0("Phyla/division with sample size < ", threshold),
hjust = 0)
rm(Taxa_to_rename, N_to_rename, vector, bar1, threshold)
## Only with titles containong no descriptors
bar2 <- db2[db2$Title_adjecties == 0,]
vector <- sort(apply(bar2[,36:86],2, sum, na.rm = TRUE), decreasing = TRUE)
bar2 <- data.frame(Phyla = names(vector), N = vector)
threshold2 <- 3 #cut of to merge in multiple category
Taxa_to_rename <- ifelse(bar2$N < threshold2, bar2$N, NA)
N_to_rename    <- sum(Taxa_to_rename,na.rm=TRUE)
Taxa_to_rename <- length(na.omit(Taxa_to_rename))
bar2 <- bar2[ 1 : (nrow(bar2)-Taxa_to_rename), ]
bar2 <- rbind(bar2, data.frame(Phyla = paste0("Others (n = ",Taxa_to_rename,")"), N = N_to_rename))
bar2 <- cbind(bar2, Type = c(rep("Animals",2),
rep("Plants",2),
"Microorganisms",
rep("Animals",3),
rep("Plants",2),
rep("Animals",2),
"Multiple"))
bar2$Phyla <- factor(bar2$Phyla, levels = bar2$Phyla)
col_bar2 <- col_bar[c(1,3:5)]
barS2 <- ggplot(bar2, aes(x = Phyla, y = N))+
geom_bar(aes(fill = Type),stat="identity", alpha=1, colour = "black")  +
labs(x = NULL, y = "Count")+
scale_fill_manual(values = col_bar2) +
theme_custom() +
theme(legend.position = "none") +
coord_flip() +
annotate(geom = "text", y = bar2[nrow(bar2),2] + 1,
x = nrow(bar2),
label = paste0("Phyla/division with sample size < ",threshold2),
hjust = 0)
# Checking distribution by region, method and system
(plotS1a <- db2 %>%
drop_na(Geography,Biodiversity_prop) %>%
#filter(Biodiversity_prop < 0.4) %>%  #removing 1 outlier
ggplot(aes(x = Geography, y = Biodiversity_prop)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 1, fill = RColorBrewer::brewer.pal(5, "Blues")[5], col = "white", adjust = 1.5) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = RColorBrewer::brewer.pal(5, "Blues")[3]) +
geom_boxplot(width = 0.2,  col = RColorBrewer::brewer.pal(5, "Blues")[5], outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom() + theme(axis.text.y = element_text(size = 15)) + coord_flip())
(plotS1b <- db2 %>%
drop_na(Domain,Biodiversity_prop) %>%
ggplot(aes(x = Domain, y = Biodiversity_prop)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 1, fill= RColorBrewer::brewer.pal(5, "Blues")[5], col = "white", adjust = 1.5) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = RColorBrewer::brewer.pal(5, "Blues")[3]) +
geom_boxplot(width = 0.2, col = RColorBrewer::brewer.pal(5, "Blues")[5], outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom() + theme(axis.text.y = element_text(size = 15)) + coord_flip())
levels(db2$Method)[c(6,7)] <- "Other"
(plotS1c <- db2 %>%
drop_na(Method,Biodiversity_prop) %>%
ggplot(aes(x = Method, y = Biodiversity_prop)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 1, fill= RColorBrewer::brewer.pal(5, "Blues")[5], col = "white", adjust = 1.5) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.7, color = RColorBrewer::brewer.pal(5, "Blues")[3]) +
geom_boxplot(width = 0.2, col = RColorBrewer::brewer.pal(5, "Blues")[5], outlier.shape = NA, alpha = 0) +
labs(y = Y.label, x = NULL) +
theme_custom() + theme(axis.text.y = element_text(size = 15)) + coord_flip())
pdf(file = "Figure/Figure_S2.pdf", width = 14, height = 10)
ggpubr::ggarrange(plotS1a, plotS1b, plotS1c, barS1,
common.legend = FALSE,
hjust = -5,
align = "hv",
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2) #warnings() are due to NA removal
dev.off()
pdf(file = "Figure_Current_Biology/Figure_S2.pdf", width = 14, height = 10)
ggpubr::ggarrange(plotS1a, plotS1b, plotS1c, barS1,
common.legend = FALSE,
hjust = -5,
align = "hv",
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2) #warnings() are due to NA removal
dev.off()
