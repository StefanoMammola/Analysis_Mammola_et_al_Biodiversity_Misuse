parameters::parameters(m1b, df_method="wald")
performance::check_collinearity(m1b)
# PostHoc
pairs(emmeans::emmeans(m1b, ~ Domain), simple=c("Domain"))
pairs(emmeans::emmeans(m1b, ~ Geography), simple="Geography")
pairs(emmeans::emmeans(m1b, ~ Method), simple="Method")
# Estract estimates
Estimates_m1 <-
m1b %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
# Set variable order and rename
order_var <- c("Year of publication",
"Domain [Terrestrial]",
"Domain [Saltwater]",
"Domain [Freshwater]",
"Geographic [Palearctic]",
"Geographic [Afrotropical]",
"Geographic [Indomalayan]",
"Geographic [Neartic]",
"Geographic [Australasian]",
"Geographic [Neotropical]",
"Geographic [Antartic]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Phylogenetic diversity [yes]",
"Functional diversity [yes]",
"Mention of location in title [yes]",
"Mention of habitat in title [yes]",
"Mention of taxon/a in title [yes]")
Estimates_m1$Variable <- order_var #Rename
Estimates_m1$Variable <- factor(Estimates_m1$Variable, rev(order_var)) #Sort
sign <- ifelse(Estimates_m1$p > 0.05, "", " *") #Significance
col_p <- ifelse(Estimates_m1$p > 0.05, "grey5", ifelse(Estimates_m1$Estimate>0,"orange","blue")) #Significance
# Plot
(plot_model1 <- ggplot2::ggplot(data = Estimates_m1) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m1$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = "Full model (N = 660)\n[all articles with sampled biodiversity proportion > 0]\n",
y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()
)
# Repeating the analysis only with generic titles (no moderators)
db_glm2 <- db2 %>% drop_na(Title_adjecties) %>%
filter(Title_adjecties == 0) %>%
select(year = Publication_year,
n_aut,
citation_residuals,
Method,
Phylogenetic_div,
Functional_div,
Biodiversity_prop,
Geography,
Domain)
db_glm2 <- na.omit(db_glm2)
table(db_glm2$Method) #Problems!
levels(db_glm2$Method)[c(6,7)] <- "Other"
table(db_glm2$Geography) #problems!
db_glm2 <- db_glm2 %>% filter(!Geography == "Antarctic")
db_glm2$Geography <- droplevels(db_glm2$Geography)
table(db_glm2$Domain)  #problems!
levels(db_glm2$Domain)[c(3,4)] <- "Aquatic"
db_glm2$Domain <- droplevels(db_glm2$Domain)
# Dependent var
db_glm2$prop  <- db_glm2$Biodiversity_prop*56
db_glm2$total <- length(36:91)
# Checking outliers
par(mar= c(rep(2,4)))
dotchart(db_glm2$citation_residuals) # OK
dotchart(db_glm2$prop) #1 outliers
# Removing outliers
db_glm2 <- db_glm2 %>% filter(prop < 11)
#scale continuos variables
db_glm2$year <- scale(db_glm2$year)
db_glm2$citation_residuals <- scale(db_glm2$citation_residuals)
# Set formula
model_2 <- as.formula("cbind(prop,total) ~
year +
Domain + Geography + Method +
Phylogenetic_div + Functional_div")
# Initial model
m2  <- glm(model_2, data = db_glm2, family = "binomial")
performance::check_overdispersion(m2)
parameters::parameters(m2, df_method="wald")
performance::check_collinearity(m2)
pairs(emmeans::emmeans(m2, ~ Geography), simple="Geography")
# PostHoc
pairs(emmeans::emmeans(m2, ~ Domain), simple=c("Domain"))
pairs(emmeans::emmeans(m2, ~ Method), simple="Method")
# Estract estimates
Estimates_m2 <-
m2 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
#Set variable order and rename
order_var2 <- c("Year of publication",
"Domain [Terrestrial]",
"Domain [Aquatic]",
"Geographic [Palearctic]",
"Geographic [Afrotropical]",
"Geographic [Indomalayan]",
"Geographic [Neartic]",
"Geographic [Australasian]",
"Geographic [Neotropical]",
"Method [Review/Opinion]",
"Method [Field sampling]",
"Method [Big data]",
"Method [Other]",
"Phylogenetic diversity [yes]",
"Functional diversity [yes]"
)
Estimates_m2$Variable <- order_var2 #Rename
Estimates_m2$Variable <- factor(Estimates_m2$Variable, rev(order_var2)) #sort
sign <- ifelse(Estimates_m2$p > 0.05, "", " *")
col_p <- ifelse(Estimates_m2$p > 0.05, "grey5", ifelse(Estimates_m2$Estimate>0,"orange","blue") )
(plot_model2 <- ggplot2::ggplot(data = Estimates_m2) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m2$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = "Full model (N = 94)\n[all articles with no moderators in the title]",
y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()
)
rm(m2, sign, order_var2, model_2, col_p)
# Clean
rm(m1, m1b, sign, order_var1, model_1, col_p)
plot_model1
db_impact <- db %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab) %>% mutate_at(vars(starts_with("Title_")), as_factor)
db_alt <- na.omit(db_impact)
db_alt <- db_alt %>% filter(Biodiversity_prop > 0)
colnames(db)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab) %>% mutate_at(vars(starts_with("Title_")), as_factor)
db_alt <- na.omit(db_impact)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab) %>% mutate_at(vars(starts_with("Title_")), as_factor)
db_alt <- na.omit(db_impact)
db_impact <- db %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab) %>% mutate_at(vars(starts_with("Title_")), as_factor)
db_alt <- na.omit(db_impact)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab) %>% mutate_at(vars(starts_with("Title_")), as_factor)
db_alt <- na.omit(db_impact)
colnames(db)
View(db)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal) %>% mutate_at(vars(starts_with("Title_")), as_factor)
nlevels(db_alt$journal)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal) %>% mutate_at(vars(starts_with("Title_"),journal), as_factor)
nlevels(db_alt$journal)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal) %>% mutate_at(vars(starts_with("Title_"),journal), as_factor)
db_alt <- na.omit(db_impact)
nlevels(db_alt$journal)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties + n_aut")
# Initial model
m3  <- lm(model_3, data = db_alt)
summary(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
#Set variable order and rename
sign <- ifelse(Estimates_m3$p > 0.05, "", " *")
col_p <- ifelse(Estimates_m3$p > 0.05, "grey5", ifelse(Estimates_m3$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = "Altmetric",
y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()
)
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity_prop,
Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal) %>%
mutate_at(vars(starts_with("Title_"),journal), as_factor) %>%
mutate_at(vars(n_aut), scale)
db_alt <- na.omit(db_impact)
nlevels(db_alt$journal)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties + n_aut")
# Initial model
m3  <- lm(model_3, data = db_alt)
summary(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
#Set variable order and rename
sign <- ifelse(Estimates_m3$p > 0.05, "", " *")
col_p <- ifelse(Estimates_m3$p > 0.05, "grey5", ifelse(Estimates_m3$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = "Altmetric",
y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()
)
model_3bis <- as.formula("Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties + n_aut + (1|journal)")
m3 <- lme4::lmer(model_3bis, data = db_alt)
model_3bis <- as.formula("Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties + n_aut + (1|journal)")
m3 <- lme4::lmer(model_3bis, data = db_alt)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
Estimates_m3
m3 <- lme4::lmer(model_3bis, data = db_alt)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4, p = 5) #rename
summary(m3)
#Set variable order and rename
sign <- ifelse(Estimates_m3$p > 0.05, "", " *")
col_p <- ifelse(Estimates_m3$p > 0.05, "grey5", ifelse(Estimates_m3$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = paste0(round(Estimates_m3$Estimate,2),sign),
vjust = -1, size = 3, col = col_p) +
labs(title = "Altmetric",
y = expression(paste("Odds ratio" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()
)
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable")
Estimates_m3
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1)
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, z = 4)
#Set variable order and rename
sign <- ifelse(Estimates_m3$p > 0.05, "", " *")
Estimates_m3
#Set variable order and rename
sign <- ifelse(Estimates_m3$p > 0.05, "", " *")
col_p <- ifelse(Estimates_m3$p > 0.05, "grey5", ifelse(Estimates_m3$Estimate>0,"orange","blue") )
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = col_p, size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m3$Estimate)),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = rev(col_p))) + coord_flip()
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate),
label = round(Estimates_m3$Estimate)),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey50") + coord_flip()
)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
))
round(Estimates_m3$Estimate,3)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey50") + coord_flip())
)
ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5)
ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5)
ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0)
ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5")
ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey50", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey50")) + coord_flip()
)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey5", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey5")) + coord_flip()
)
# Set formula
model_4 <- as.formula("citation_residuals ~ Biodiversity_prop * Title_adjecties + n_aut + (1|journal)")
# Initial model
m4  <- lme4::lmer(model_4, data = db_impact)
summary(m4)
performance::check_model(m4)
m3 <- lm(Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties, data = db_alt)
performance::check_model(m4)
?performance::check_model
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties + n_aut + (1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::check_model(m3, check = "normality")
m3 <- lm(Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties, data = db_alt)
performance::check_model(m3, check = "normality")
performance::check_model(m3)
m3 <- lm(log(Altmetrics_residual+1) ~ Biodiversity_prop * Title_adjecties, data = db_alt)
m3 <- lm(Altmetrics_residuals ~ Biodiversity_prop * Title_adjecties, data = db_alt)
performance::check_model(m3)
