###Reference paper

getwd()
setwd("/Users/stefanomammola/Desktop/PAPERS IN CORSO/REFERENCE PAPER/MAMMOLA_REFERENCE")

#Packages
library(dplyr)
library(readxl)

#import files <----- downloaded on 24 September 2019


db <- read_excel("alldata.xlsx")
str(db)

db=data.frame(db)
class(db)
str(db)
#db$NR #<----- number of references
#db$CR #<----- reference list metadata
#db$TC #<----- number of citations
#db$AF #<----- Authors, long version
#db$AU #<----- Authors,short version
#db$SO #<----- Journal
#db$DT #<----- type of paper
#db$PY #<----- Publication year 

#Information on the other columns:
# https://images.webofknowledge.com/images/help/WOS/hs_wos_fieldtags.html

# Extracting only research articles
unique(levels(as.factor(db$DT)))

db = db[db$DT %in% c("Article","Letter","Article; Proceedings Paper"),]

table(is.na(db$NR))
db = db[c(-7807),]

#now loops
l <- list()
clnames <- c("main author", "publication", "year", "whatever", "DOI")
db$CR2 <- as.character(db$CR)


for (i in 1:length(db[,1])) {
  this_paper_refs <- db[i,"CR2"]
  cited_refs <- strsplit(this_paper_refs, "; ")[[1]]
  if(length(cited_refs) < 1){ 
    l[[i]] <- NULL
  }
  else {
    c <- NULL
    for (j in 1:length(cited_refs)) {
      this_ref <- cited_refs[j]
      ref_metadata <- strsplit(this_ref, ", ")[[1]]
      short_data <- ref_metadata[1] #author
      short_data <- c(short_data, ref_metadata[2]) #year
      short_data <- c(short_data, ifelse(length(ref_metadata) > 3, ref_metadata[3], NA))
      short_data <- c(short_data, ifelse(grepl("DOI", tail(ref_metadata, n= 1), fixed = T), tail(ref_metadata, n=1), NA))
      c <- rbind(c, short_data)
    }
    l[[i]] <- c
    
  }
}


# l now has everything we need
head(l[[1]])

#name standardization
Paut_split= strsplit(as.character(db$AU),";")
Paut_split=sapply(Paut_split,tolower)

sub_aut_list =list()

for (k in 1:length(Paut_split)){
  
  sub_Paut_k=NULL
  
  for (j in 1:length(Paut_split[[k]])){
    
    AA= Paut_split[[k]]
    sub_Paut_k=c(sub_Paut_k, gsub('[[:punct:] ]+','',AA[j]))
    
  }
  sub_aut_list[[k]] = sub_Paut_k
  
}

Pauthor=sub_aut_list

seminal_papers <- read_excel("seminal.xlsx")
seminal_papers <- as.data.frame(seminal_papers)
seminal_papers<-seminal_papers[1:100,]

seminal_papers$FR <- as.character(seminal_papers$`Full ref`)

seminal_papers=sapply(seminal_papers$FR, strsplit, "; ")

S_author=NULL
S_year=NULL

for (k in 1:length(seminal_papers)){
  
  A=  seminal_papers[[k]]
  seminal_author= strsplit(A[1], "@")[[1]][1]
  seminal_author= tolower(seminal_author)
  
  S_author=c(S_author,gsub('[[:punct:] ]+','',seminal_author))
  
  
  S_year=c(S_year,as.numeric(substring(A[2],1,4)))
  
}

seminal_papers =data.frame(S_author=S_author,S_year=S_year)

range(seminal_papers$S_year)



#####################################################################################
## IMPACT FACTOR
#setwd("/Users/stefanomammola/Desktop/PAPERS IN CORSO/REFERENCE PAPER/MAMMOLA_REFERENCE/IF")

setwd("/Users/stefanomammola/Desktop/PAPERS IN CORSO/REFERENCE PAPER/MAMMOLA_REFERENCE/IF")

#my_files<- list.files("/Users/stefanomammola/Desktop/PAPERS IN CORSO/REFERENCE PAPER/MAMMOLA_REFERENCE/IF")

my_files<- list.files("/Users/stefanomammola/Desktop/PAPERS IN CORSO/REFERENCE PAPER/MAMMOLA_REFERENCE/IF")

all_IF <- lapply(my_files,read.csv,header=T,sep=",")

my_IF = list()
year_IF= 1997:2018

for (k in 1:length(all_IF)){
  
  df=all_IF[[k]]
  df = df[,3:5]
  colnames(df) = c("journal","IF","Immediancy")
  df[df=="Not Available"] <- "NA"
  
  df$IF = as.numeric(as.character(df$IF))
  df$Immediancy = as.numeric(as.character(df$Immediancy))
  df$journal = as.character(df$journal)
  
  df$journal=sapply(df$journal,tolower)
  df$journal = paste(df$journal, rep(year_IF[[k]],nrow(df)),sep=' ')
  
  df$journal = gsub('[[:punct:] ]+','',df$journal)
  
  df %>% distinct()
  
  my_IF[[k]] = df
}

IF_1997_2018 = rbind(my_IF[[1]],my_IF[[2]],my_IF[[3]],my_IF[[4]],my_IF[[5]],my_IF[[6]],my_IF[[7]],
                     my_IF[[8]],my_IF[[9]],my_IF[[10]],my_IF[[11]],my_IF[[12]],my_IF[[13]],my_IF[[14]],
                     my_IF[[15]],my_IF[[16]],my_IF[[17]],my_IF[[18]],my_IF[[19]],my_IF[[20]],my_IF[[21]],my_IF[[22]])

#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################

Size=c()
Self=c()
Temp_span=c()
Temp_dev=c()
Immediancy=c()
Seminality=c()
Non_isi= c()
IF = c()
IMM_INDEX=c()

for (i in 1:length(l)){
  
  Data= l[[i]]
  
  #Number of reference
  Size =c(Size,db$NR[i])
  
  #Self citations
  Raut = sapply(Data[,1],tolower)
  Raut_list=gsub('[[:punct:] ]+','',Raut)
  
  self_cit = sum(Raut_list %in% Pauthor[[i]])
  self_cit_size = self_cit/db$NR[i]
  
  Self=c(Self, self_cit_size)
  
  #temporal span of the reference list
  SPAN= range(as.numeric(Data[,2]),na.rm=T)[2]-range(as.numeric(Data[,2]),na.rm=T)[1]
  SPAN[is.infinite(SPAN)] = 0
  
  Temp_span= c(Temp_span,SPAN)
  
  #temporal distirbution of the reference list
  
  #immediancy index of the ref. list
  y_range <- c((db$PY[i]-3):db$PY[i])[1:3]
  
  a=sum(as.numeric(Data[,2]) == y_range[1],na.rm=T)
  b=sum(as.numeric(Data[,2]) == y_range[2],na.rm=T)
  c=sum(as.numeric(Data[,2]) == y_range[3],na.rm=T)
  
  Immediancy = c(Immediancy,(a+b+c)/db$NR[i])
  
  #seminal
  seminal_paper= sum(paste(Raut_list,Data[,2],sep="") %in% paste(seminal_papers[,1],seminal_papers[,2],sep=""))
  seminal_paper_size = seminal_paper/db$NR[i]
  Seminality= c(Seminality,seminal_paper_size)
  
  #non-isi
  non_isi=length(Data[,3])-length(na.omit(as.factor(Data[,3])))
  non_isi_size=non_isi/db$NR[i]
  Non_isi = c(Non_isi,non_isi_size)
  
  #IF
  
  ref_list = gsub('[[:punct:] ]+','', paste(sapply(Data[,3],tolower),sapply(Data[,2],tolower)) )
  
  if (sum(duplicated(ref_list) == 0)) {  
    
    common <- intersect(IF_1997_2018$journal, ref_list)  
    
    IF_ref_list = IF_1997_2018[which(IF_1997_2018$journal %in% common),]
    
  }
  
  else if (sum(duplicated(ref_list) > 0)) {  
    
    NOT_DUPL= ref_list[!duplicated(ref_list)]
    
    NOT_DUPL <- intersect(IF_1997_2018$journal, ref_list)  
    
    IF_ref_list_not_dupl = IF_1997_2018[which(IF_1997_2018$journal %in% NOT_DUPL),]
    
    
    DUPL = ref_list[duplicated(ref_list)]
    
    
    for (l in 1:length(DUP)) { 
      
      DUPLICATED = intersect(IF_1997_2018$journal, DUPL[[l]] )  
      
      DUPLICATED =  IF_1997_2018[which(IF_1997_2018$journal %in% DUPLICATED),]
      
      IF_ref_list_not_dupl = rbind(IF_ref_list_not_dupl,DUPLICATED)
      
    }
    
    IF_ref_list = IF_ref_list_not_dupl 
    
  }
  
  IF= c(IF,sum(IF_ref_list$IF,na.rm=T)/nrow(IF_ref_list))
  
  IMM_INDEX= c(IMM_INDEX,sum(IF_ref_list$Immediancy,na.rm=T)/nrow(IF_ref_list))
  
}


DB_FINAL=  data.frame(Journal=db$SO, 
                      Year=db$PY, 
                      Citation=db$TC,
                      Title=db$TI,
                      Size=Size,
                      Non_isi=Non_isi,
                      Temp_span=Temp_span,
                      Self=Self,
                      Immediancy=Immediancy,
                      total_IF=IF,
                      Seminality=Seminality)

write.table(DB_FINAL, "/Users/stefanomammola/Desktop/FINAL_TABLE.txt")

#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################

library(lubridate)
library(gam)

db2 <-read.table("/Users/stefanomammola/Desktop/PAPERS IN CORSO/REFERENCE PAPER/MAMMOLA_REFERENCE/FINAL_TABLE.txt")
db2$Article_age <- 2019-db2$Year

db2<-db2[db2$Year > 1996,]

db2 =na.omit(db2)

is.na(db2) <-sapply(db2, is.infinite)
db2[is.na(db2)]<-0

table(db2$Journal)

#####################################################################################
#####################################################################################
##################################### DATA EXPLORATION ##############################
#####################################################################################
#####################################################################################

summary(db2)

########################### DEPENDENT VARIABLES #####################################
#####################################################################################

## Zero inflation
100*sum(db2$Citation==0,na.rm=T)/nrow(db2)
#41%
mean(db2$Temp_span)
## Citation distribution
hist(table(db2$Citation),breaks=200,main="Distribution of citations",xlab="Number of citations")

## Checking distirbution of articles/year
table(db2$Year) #Three strange values in "year" (18,30,33)

yr=as.Date(as.character(db2$Year), format = "%Y")


## Checking outliers
dev.off()
boxplot(db2$Citation) #Outliers in citations

library(ggplot2)

##VIOLIN

TEMA_VIOLIN =theme(axis.text.x=element_blank(),
                   axis.text.y=element_text(size=10, angle=90,hjust = 0.5),
                   axis.ticks.x = element_blank(),
                   axis.title.x=element_text(size=11,face="bold"),
                   axis.title.y=element_text(size=11, angle=90,face="bold"),
                   panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0.3),
                   legend.background = element_rect(fill="gray97", size=0.3, linetype="solid",color="black"),
                   legend.position = c(0.80, 0.7),
                   legend.text = element_text(colour="black", size=10),
                   legend.title=element_text(colour="black",size=12),
                   legend.title.align=0.5)

viol <- ggplot(db2, aes(x=as.factor(Year),y=Size)) +
  geom_violin(trim=FALSE) + TEMA_VIOLIN +
   stat_summary(fun.data=mean_sdl,
               geom="pointrange", color="red")
# 

data_summary <- function(x) {
  m <- mean(x)
  ymin <- m-sd(x)
  ymax <- m+sd(x)
  return(c(y=m,ymin=ymin,ymax=ymax))
}


v_size <- ggplot(db2, aes(x=1,y=Size)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN +
  stat_summary(fun.data=data_summary)+
  ylab("Reference list size (N° of papers)")+
xlab("")+
annotate(geom="text", x=0.6, y=(0.9*(max(db2$Size)-min(db2$Size))),size=6, label="(a)",
           color="black",fontface="bold")

#stat_summary(fun.data=mean_sdl,
#              geom="pointrange", color="black")

v_isi <- ggplot(db2, aes(x=1,y=Non_isi)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN +
  ylab("Proportion of non-journal articles")+
  stat_summary(fun.data=data_summary)+
  annotate(geom="text", x=0.6, y=(0.9*(max(db2$Non_isi)-min(db2$Non_isi))),size=6, label="(e)",
           color="black",fontface="bold")+ xlab("")

v_temp <- ggplot(db2, aes(x=1,y=Temp_span)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN +
  ylab("Reference list temporal span (years)") +
  stat_summary(fun.data=data_summary)+
  annotate(geom="text", x=0.6, y=(0.9*(max(db2$Temp_span)-min(db2$Temp_span))),size=6, label="(b)",
           color="black",fontface="bold")+
  xlab("")

v_semin <- ggplot(db2, aes(x=1,y=Seminality)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN+
  ylab("Proportion of seminal papers") +
  stat_summary(fun.data=data_summary)+
  annotate(geom="text", x=0.6, y=(0.9*(max(db2$Seminality)-min(db2$Seminality))),size=6, label="(g)",
           color="black",fontface="bold")+
  xlab("")

table(db2$Seminality)

38983/nrow(db2)

v_self <- ggplot(db2, aes(x=1,y=Self)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN +
  ylab("Proportion of self-citations")+
  stat_summary(fun.data=data_summary,col="black")+
  annotate(geom="text", x=0.6, y=(0.9*(max(db2$Self)-min(db2$Self))),size=6, label="(f)",
           color="black",fontface="bold")+
  xlab("")


v_imm <- ggplot(db2, aes(x=1,y=Immediancy)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN +
  ylab("Proportion of recent papers cited")+
  stat_summary(fun.data=data_summary)+
  annotate(geom="text", x=0.6, y=(0.9*(max(db2$Immediancy)-min(db2$Immediancy))),size=6, label="(c)",
           color="black",fontface="bold")+
  xlab("")

v_IF <- ggplot(db2, aes(x=1,y=total_IF)) + 
  geom_violin(trim=T,fill="grey80")+ 
  theme_bw()+ TEMA_VIOLIN +
  ylab("Total Impact Factor (proportion)")+
  stat_summary(fun.data=data_summary)+
  annotate(geom="text", x=0.6, y=(0.9*(max(db2$total_IF)-min(db2$total_IF))),size=6, label="(d)",
           color="black",fontface="bold")+
  xlab("")




#####################################################################################
##### CURIOSITY BOX: 1: WHAT ARE THE MOST CITED PAPERS IN ECOLOGY?
outliers_cit<-db2[db2$Citation >5000,]

outliers_cit$Title
#[1] Detecting the number of clusters of individuals using the software STRUCTURE: a simulation study

# Methodological papers.

#####################################################################################

db=db2
db2<-db2[db2$Citation <= 6000,] #<--- removing outliers in citations


db2$Citation
## What is the trend of citation over time?
plot(db2$Article_age,db2$Citation)


## Correcting citation by article age
library(gam)
M0 <- gam::gam(Citation ~ s(Article_age), family = poisson, data=db2) #constraining dof to 2 so that you don't get negative predicted citations
summary(M0)
plot(M0,se=F)
F= 2724.8; p< 2.2e-16


MyData <- expand.grid(Article_age= 
                      seq(range(db2$Article_age)[1],range(db2$Article_age)[2],length=300)
                      
                      )


X <- model.matrix(~ Article_age, data = MyData)               

P <- X %*% fixef(M0)



SE <- sqrt(diag(X %*% vcov(M0) %*% t(X)))
P1 <- predict(M0, newdata = MyData)
MyData$Fit <- P1
MyData$selow <- P1 - 1.96 * SE  #lower bound
MyData$seup  <- P1 + 1.96 *SE   #lower bound

TEMA_GROB =theme(axis.text=element_blank(),
                 axis.title=element_blank(),
                 panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0),
                 legend.background = element_rect(fill="gray97", size=0, linetype="solid",color="black"),
                 legend.position = c(0.80, 0.7),
                 legend.text = element_text(colour="black", size=10),
                 legend.title=element_text(colour="black",size=12),
                 legend.title.align=0.5)




library(ggplot2)
p_gam <- ggplot() +
  geom_line(data = MyData, aes(x = Article_age, y = Fit), size=1,colour = "black") +  #"#E69F00"
   theme_bw() +
  xlab("Article age (years)")+
  ylab("Citations")+
  theme(axis.text.x = element_text(size = 10),
        axis.text.y =element_text(size = 10, angle=0),
              axis.title.x=element_text(size=11,face="bold"),
              axis.title.y=element_text(size=11,face="bold", angle=90),
              panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0.3),
              legend.background = element_rect(fill="gray97", size=0.3, linetype="solid",color="black"),
              legend.position = c(0.80, 0.7),
              legend.text = element_text(colour="black", size=10),
              legend.title=element_text(colour="black",size=12),
              legend.title.align=0.5)
 
p_gam

p_cit <-ggplot(db2, aes(x=Citation)) + 
  geom_density(color="black", fill="#E69F00", alpha = 0.8)+
  xlim(0,1000)+
  ylim(0,0.019)+
  xlab("Citations (papers with <1000 citations)")+
  ylab("Density of papers")+
  theme_bw() +
  annotate(geom="text", x=130, y=0.017,size=6, label="(h)",
           color="black",fontface="bold")+
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10, angle=90,hjust = 0.5),
        axis.title.x=element_text(size=10,face="bold"),
        axis.title.y=element_text(size=10,face="bold", angle=90),
        panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0.3),
        legend.background = element_rect(fill="gray97", size=0.3, linetype="solid",color="black"),
        legend.position = c(0.80, 0.7), 
        legend.text = element_text(colour="black", size=10),
        legend.title=element_text(colour="black",size=12),
        legend.title.align=0.5)


Plot_Citations = p_cit + annotation_custom(ggplotGrob(p_gam),xmin=200,xmax=1000,ymin=0.007,ymax=0.018)


# v_cit <- ggplot(db2, aes(x=1,y=Citation)) + 
#   geom_violin(trim=T,fill="white")+ 
#   theme_bw()+ TEMA_VIOLIN +
#   ylab("Citations")+
#   stat_summary(fun.data=data_summary)





library(gridExtra)
grid.arrange(v_size,v_temp,v_imm,v_IF,v_isi,v_self,v_semin,Plot_Citations,ncol=4)


pdf("/Users/stefanomammola/Desktop/Figure_1.pdf",width=12,height=6,paper='special')
grid.arrange(v_size,v_temp,v_imm,v_IF,v_isi,v_self,v_semin,Plot_Citations,ncol=4)

dev.off()

# Correcting citationby article age — zero inflated model

#library(mgcv)
#M1_ZI <- gam(Citation ~ s(Article_age),family=ziP(),data=db2)

#summary(M1_ZI)
#plot(M1_ZI,se=T)
#residuals_ZIP = resid(M1_ZI)

## Taking the residual of citations
db2 <- data.frame(db2,Citation_residuals=resid(M0,type="pearson"))


########################## EXPLANATORY VARIABLES ####################################
#####################################################################################

## checking outliers 
par(mfrow=c(3,3))

for (i in 5:11){
  boxplot(db2[,i],main=as.character(colnames(db2)[i]))
}

## and their distribution...
par(mfrow=c(3,3))
for (i in 5:11){
  hist(db2[,i],main=as.character(colnames(db2)[i]),breaks=200)
}


2001-1248

#####################################################################################
##### CURIOSITY BOX 2: WHO CITED REALLY OLD PAPERS?
temporal_span_outliers = db2[db2$Temp_span >600,]
temporal_span_outliers$Title

#[1] Ecosystems off track: rate-induced critical transitions in ecological models       
#He cited: Newton, I. 1687. Philosophiae naturalis principia mathematica.

#####################################################################################

db2 <- db2[db2$Self <1,] #<--- removing outliers in self-citations
#db2 <- db2[db2$Temp_span <600,] #<--- removing outliers in Temporal span

for (i in 5:11){
  boxplot(db2[,i],main=as.character(colnames(db2)[i]))
}


## checking collinearity

panel.cor= function(x, y, digits=1, prefix="", cex.cor)
{
  usr <- par("usr"); on.exit(par(usr))
  par(usr = c(0, 1, 0, 1))
  r1=cor(x,y,use="pairwise.complete.obs",method = "spearman")
  r <- abs(cor(x, y,use="pairwise.complete.obs",method = "spearman"))
  txt <- format(c(r1, 0.123456789), digits=digits)[1]
  txt <- paste(prefix, txt, sep="")
  if(missing(cex.cor)) cex <- 2
  text(0.5, 0.5, txt, cex = 2)
}


#pairs(db2[,colnames(db2)[4:11]],lower.panel = panel.cor) ## No apparent collinearity


library("psych")
#pairs.panels(db2[,colnames(db2)[5:11]])

#Alternatives:
#https://jamesmarquezportfolio.com/correlation_matrices_in_r.html


## checking relationship between X & Y
# dev.off()
# par(mfrow=c(2,2))
# for (i in 5:10){
#   #lo <- loess(db2$Citation_residuals~db2[,i]) #Smoothing average
#   plot(db2[,i],db2$Citation_residuals,xlab=as.character(colnames(db2)[i]),ylab="Citations (Residuals)")
#   #lines(predict(lo), col='red', lwd=2)
# }

########################## MODELLING ####################################
#####################################################################################

db2$logSize = log(db2$Size+1)
db2$logTemp_span = log(db2$Temp_span+1)
db2$asinSelf = sqrt(asin(db2$Self))
db2$asinNon_isi = sqrt(asin(db2$Non_isi))
db2$asinImmediancy = sqrt(asin(db2$Immediancy))
db2$asinSeminality = sqrt(asin(db2$Seminality))
db2$logTotal_IF = log(db2$total_IF+1)

library(nlme)

M1 <- lme(Citation_residuals ~ 
            logSize+
            asinNon_isi+
            logTemp_span+
            asinSelf
            asinImmediancy+
            logTotal_IF+
            asinSeminality, 
            random = list(Journal=~1, Year=~1),
            data = db2, method = "REML")

summary(M1)


M2<-gam(Citation_residuals ~ s(asinSelf),data = db2)
dev.off()
plot(M2,se=T)
library(ggplot2)
####################
TEMA =theme(axis.text.x = element_text(size = 10),
            axis.text.y = element_text(size = 10, angle=90,hjust = 0.5),
            axis.title.x=element_text(size=10,face="bold"),
            axis.title.y=element_text(size=10,face="bold", angle=90),
            panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0.3),
            legend.background = element_rect(fill="gray97", size=0.3, linetype="solid",color="black"),
            legend.position = c(0.80, 0.7), 
            legend.text = element_text(colour="black", size=10),
            legend.title=element_text(colour="black",size=12),
            legend.title.align=0.5)



summary(M1)
## SIIZE

MyData_size <- expand.grid(logSize = seq(range(db2$logSize)[1], range(db2$logSize)[2], length = 800),
                           asinNon_isi =mean(db2$asinNon_isi),
                           logTemp_span = mean(db2$logTemp_span),
                           asinSelf =mean(db2$asinSelf),
                           asinImmediancy =mean(db2$asinImmediancy),
                           logTotal_IF =mean(db2$logTotal_IF),
                           asinSeminality =mean(db2$asinSeminality))



X <- model.matrix(~ logSize+
                    asinNon_isi+
                    logTemp_span+
                    asinSelf+
                    asinImmediancy+
                    logTotal_IF+
                    asinSeminality, 
                    data = MyData_size)

P <- X %*% fixef(M1)
Se <- sqrt(diag(X %*% vcov(M1) %*% t(X)))



MyData_size$Fit    <- P  #Fitted values
MyData_size$selow  <- P - 2 * Se  #lower bound
MyData_size$seup   <- P + 2 * Se   #lower bound


p <- ggplot()  +
  geom_point(data = db2, aes(y = Citation_residuals, x = logSize),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ylim(-20,400)+
  annotate(geom="text", x=1, y=(0.9*(380)),size=8, label="(a)",
           color="black",fontface="bold")+


  geom_ribbon(data = MyData_size, aes(x = logSize, 
                                      ymax = Fit + seup, 
                                      ymin = Fit - selow), fill="#E69F00", alpha = 0.8) + 
  geom_line(data = MyData_size, aes(x = logSize, y = Fit), colour = "grey30") +
  
  xlab("Reference list size (log)") + 
  ylab("Citations (residuals)") +
  theme_bw() +
  TEMA

p


##########

MyData_self <- expand.grid(logSize = mean(db2$logSize),
                           asinNon_isi = mean(db2$asinNon_isi),
                           logTemp_span = mean(db2$logTemp_span),
                           asinSelf =seq(range(db2$asinSelf)[1],range(db2$asinSelf)[2],length=200),
                           asinImmediancy =mean(db2$asinImmediancy),
                           logTotal_IF =mean(db2$logTotal_IF),
                           asinSeminality =mean(db2$asinSeminality))


X <- model.matrix(~ logSize+
                    asinNon_isi+
                    logTemp_span+
                    asinSelf+
                    I(asinSelf^3)+
                    asinImmediancy+
                    logTotal_IF+
                    asinSeminality, data = MyData_self)               
P <- X %*% fixef(M1)
Se <- sqrt(diag(X %*% vcov(M1) %*% t(X)))


MyData_self$Fit    <- P  #Fitted values
MyData_self$selow <- P - 1.96 * Se  #lower bound
MyData_self$seup  <- P + 1.96 * Se   #lower bound


p2 <- ggplot() + 
  geom_point(data = db2, aes(y = Citation_residuals, x = asinSelf),
                          shape = 16, 
                          size = 1,
                          col="grey30",
                          alpha=0.7)+
  ylim(-9.12,400)+
  xlim(0,1)+
  
  annotate(geom="text", x=0.05, y=(0.9*(400-9.12)),size=8, label="(b)",
           color="black",fontface="bold")+
  
  geom_ribbon(data = MyData_self, aes(x = asinSelf, 
                                      ymax = Fit + seup, 
                                      ymin = Fit - selow), fill="#E69F00", alpha = 0.8) + 
  geom_line(data = MyData_self, aes(x = asinSelf, y = Fit), colour = "grey30") +
  

  xlab("Proportion of self-citations (arc-sin)") + 
  ylab("Citations (residuals)") +
  theme_bw() +
  TEMA 
p2

#############

MyData_imm <- expand.grid(logSize = mean(db2$logSize),
                                         asinNon_isi = mean(db2$asinNon_isi),
                                         logTemp_span = mean(db2$logTemp_span),
                                         asinSelf = mean(db2$asinSelf),
                                         asinImmediancy = seq(range(db2$asinImmediancy)[1],range(db2$asinImmediancy)[2],length=200),
                                         logTotal_IF =mean(db2$logTotal_IF),
                                         asinSeminality =mean(db2$asinSeminality))



X <- model.matrix(~ logSize+
                    asinNon_isi+
                    logTemp_span+
                    asinSelf+
                    asinImmediancy+
                    logTotal_IF+
                    asinSeminality, data = MyData_imm)               
P <- X %*% fixef(M1)
Se <- sqrt(diag(X %*% vcov(M1) %*% t(X)))


MyData_imm$Fit    <- P  #Fitted values
MyData_imm$selow <- P - 1.96 * Se  #lower bound
MyData_imm$seup  <- P + 1.96 * Se   #lower bound


p3 <- ggplot() + 
  geom_point(data = db2, aes(y = Citation_residuals, x = asinImmediancy),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ylim(-9.12,400)+
  xlim(0,1)+
  
  annotate(geom="text", x=0.05, y=(0.9*(400-9.12)),size=8, label="(c)",
           color="black",fontface="bold")+
  
  geom_ribbon(data = MyData_imm, aes(x = asinImmediancy, 
                                      ymax = Fit + seup, 
                                      ymin = Fit - selow), fill="#E69F00", alpha = 0.8) + 
  geom_line(data = MyData_imm, aes(x = asinImmediancy, y = Fit), colour = "grey30") +
  
  
  xlab("Proportion of recent papers cited (arc-sin)") + 
  ylab("Citations (residuals)") +
  theme_bw() +
  TEMA 

#################

MyData_IF <- expand.grid(logSize = max(db2$logSize),
                                         asinNon_isi = mean(db2$asinNon_isi),
                                         logTemp_span = mean(db2$logTemp_span),
                                         asinSelf = mean(db2$asinSelf),
                                         asinImmediancy = mean(db2$asinImmediancy),
                                         logTotal_IF =seq(range(db2$logTotal_IF)[1],range(db2$logTotal_IF)[2],length=200),
                                         asinSeminality =mean(db2$asinSeminality))



X <- model.matrix(~ logSize+
                    asinNon_isi+
                    logTemp_span+
                    asinSelf+
                    asinImmediancy+
                    logTotal_IF+
                    asinSeminality, data = MyData_IF)               
P <- X %*% fixef(M1)
Se <- sqrt(diag(X %*% vcov(M1) %*% t(X)))


MyData_IF$Fit    <- P  #Fitted values
MyData_IF$selow  <- P - 1.96 * Se  #lower bound
MyData_IF$seup   <- P + 1.96 * Se   #lower bound

p4 <- ggplot() + 
  geom_point(data = db2, aes(y = Citation_residuals, x = logTotal_IF),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ylim(-9.12,400)+
  annotate(geom="text", x=0.2, y=(0.9*(400-9.12)),size=8, label="(d)",
           color="black",fontface="bold")+
  geom_ribbon(data = MyData_IF, aes(x = logTotal_IF, 
                                     ymax = Fit + seup, 
                                     ymin = Fit - selow), fill="#E69F00", alpha = 0.8) + 
  geom_line(data = MyData_IF, aes(x = logTotal_IF, y = Fit), colour = "grey30") +
  
  
  xlab("Total Impact Factor (proportion; log)") + 
  ylab("Citations (residuals)") +
  theme_bw() +
  TEMA 


##########
# MyData_temp <- expand.grid(logSize = mean(db2$logSize),
#                            asinNon_isi = mean(db2$asinNon_isi),
#                            logTemp_span = seq(range(db2$logTemp_span)[1],range(db2$logTemp_span)[2],length=200),
#                            asinSelf =mean(db2$asinSelf),
#                            asinImmediancy =mean(db2$asinImmediancy),
#                            logTotal_IF =mean(db2$logTotal_IF),
#                            asinSeminality =mean(db2$asinSeminality))
# 
# range(db2$Temp_span)
# 
# 
# X <- model.matrix(~ logSize+
#                     asinNon_isi+
#                     logTemp_span+
#                     asinSelf+
#                     asinImmediancy+
#                     logTotal_IF+
#                     asinSeminality, data = MyData_temp )               
# P <- X %*% fixef(M1)
# Se <- sqrt(diag(X %*% vcov(M1) %*% t(X)))
# 
# MyData_temp$Fit    <- P  #Fitted values
# MyData_temp$selow  <- P - 1.96 * Se  #lower bound
# MyData_temp$seup   <- P + 1.96 * Se   #lower bound
# 
# 
# 
# 
# p5 <- ggplot() + 
#   geom_point(data = db2, aes(y = Citation_residuals, x = logTemp_span),
#              shape = 16, 
#              size = 1,
#              col="grey30",
#              alpha=0.7)+
#   
#   geom_ribbon(data = MyData_temp, aes(x = logTemp_span, 
#                                     ymax = Fit + seup, 
#                                     ymin = Fit - selow), fill="#E69F00", alpha = 0.8) + 
#   geom_line(data = MyData_temp, aes(x = logTemp_span, y = Fit), colour = "grey30") +
#   
#   
#   xlab("Temporal span (logarithm)") + 
#   ylab("Citations (residuals)") +
#   theme_bw() +
#   TEMA 

2017-1998


library(gridExtra)

pdf("/Users/stefanomammola/Desktop/Figure_2.pdf",width=12,height=6,paper='special')

grid.arrange(p,p2,p3,p4,ncol=2)

dev.off()

######## TEMPORAL TRENDS
TEMA_GROB = theme(axis.text=element_blank(),
                  axis.title=element_blank(),
                  panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0),
                  legend.background = element_rect(fill="gray97", size=0, linetype="solid",color="black"),
                  legend.position = c(0.80, 0.7),
                  legend.text = element_text(colour="black", size=10),
                  plot.title = element_text(size=11),
                  legend.title=element_text(colour="black",size=12),
                  legend.title.align=0.5)

TEMA_GROB_inset = theme(axis.text=element_blank(),
                  axis.title=element_blank(),
                  panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0),
                  legend.background = element_rect(fill="gray97", size=0, linetype="solid",color="black"),
                  legend.position = c(0.80, 0.7),
                  legend.text = element_text(colour="black", size=10),
                  plot.title = element_text(size=7),
                  legend.title=element_text(colour="black",size=12),
                  legend.title.align=0.5)

TEMA2_inset =theme( axis.text.y=element_text(size=8, angle=90,hjust = 0.5),
                    axis.text.x = element_text(size = 7,angle=90,vjust=0.5),
                    axis.title.x=element_text(size=9,face="bold"),
                    axis.title.y=element_text(size=9, angle=90,face="bold"),
                    panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0.3),
                    legend.background = element_rect(fill="gray97", size=0.3, linetype="solid",color="black"),
                    legend.position = c(0.80, 0.7),
                    
                    legend.text = element_text(colour="black", size=10),
                    legend.title=element_text(colour="black",size=12),
                    legend.title.align=0.5)



TEMA2 =theme(       axis.text.y=element_text(size=10, angle=90,hjust = 0.5),
                    axis.text.x = element_text(size = 10,angle=90,vjust=0.5),
                    axis.title.x=element_text(size=11,face="bold"),
                    axis.title.y=element_text(size=11, angle=90,face="bold"),
                    panel.grid.major = element_line(colour = "grey90",linetype="dotted",size=0.3),
                   legend.background = element_rect(fill="gray97", size=0.3, linetype="solid",color="black"),
                   legend.position = c(0.80, 0.7),
                
                   legend.text = element_text(colour="black", size=10),
                   legend.title=element_text(colour="black",size=12),
                   legend.title.align=0.5)

library(nlme)

## SIIZE
M2 <- lme(Size ~ Year,
          random = list(Journal=~1),
          data = db2, method = "ML")

summary(M2)
range(db2$Year)

MyData_size2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_size2)
P <- X %*% fixef(M2)
MyData_size2$Fit    <- P  #Fitted values

t1 <- ggplot()  +
  geom_point(data = db2, aes(y = Size, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ggtitle(expression(paste("y = -2057.89 + 1.05x", italic("   R"^2)," = 0.12",sep='')))+
  geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  theme_bw() +
  TEMA_GROB


t1_bis <- ggplot(db2, aes(x=as.factor(Year),y=Size)) +
  geom_violin(trim=FALSE,fill="grey80")+
  ylab("Reference list size (N° of papers)") +
  xlab("")+
  theme_bw() +
  annotate(geom="text", x=19, y=400,size=8, label="(c)",
           color="black",fontface="bold")+
  
  TEMA2+
  
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")

T1 = t1_bis + annotation_custom(ggplotGrob(t1),xmin=1,xmax=6,ymin=250,ymax=400)

T1



mean(db2[db2$Year== 1997,]$Size,na.rm=T)
sd (db2[db2$Year== 1997,]$Size,na.rm=T)

mean(db2[db2$Year== 2017,]$Size,na.rm=T)
sd (db2[db2$Year== 2017,]$Size,na.rm=T)


## Non-isi
M3 <- lme(Non_isi ~ Year,
          random = list(Journal=~1),
          data = db2, method = "ML")

summary(M3)

MyData_nonisi2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_nonisi2)
P <- X %*% fixef(M3)
MyData_nonisi2$Fit    <- P  #Fitted values

t2 <- ggplot()  +
  geom_point(data = db2, aes(y = Non_isi, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
   ggtitle(expression(paste("y = 8.82 - 0.01x", italic("   R"^2)," = 0.18",sep='')))+
  
   geom_line(data = MyData_nonisi2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  theme_bw() +
  TEMA_GROB


t2_bis <- ggplot(db2, aes(x=as.factor(Year),y=Non_isi)) +
  geom_violin(trim=FALSE,fill="grey80")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=2,colour = "#E69F00") +
  ylab("Proportion of non-journal articles") +
  xlab("")+
  ylim(0,1)+
  annotate(geom="text", x=20, y=0.95,size=8, label="(b)",
           color="black",fontface="bold")+
  
  theme_bw() +
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  
  TEMA2+
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")
# 

T2 = t2_bis + annotation_custom(ggplotGrob(t2),xmin=12,xmax=17,ymin=0.7,ymax=1)

T2


mean(db2[db2$Year== 1997,]$Non_isi,na.rm=T)
sd (db2[db2$Year== 1997,]$Non_isi,na.rm=T)

mean(db2[db2$Year== 2017,]$Non_isi,na.rm=T)
sd (db2[db2$Year== 2017,]$Non_isi,na.rm=T)



## temp-span
M4 <- lme(Temp_span ~ Year,
          random = list(Journal=~1),
          data = db2, method = "ML")

summary(M4)



MyData_temp2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_temp2)
P <- X %*% fixef(M4)
MyData_temp2$Fit    <- P  #Fitted values

t3 <- ggplot()  +
  geom_point(data = db2, aes(y = Temp_span, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ggtitle(expression(paste("y= -1200.31 - 0.62x", italic("   R"^2)," = 0.05",sep='')))+
  
  geom_line(data = MyData_temp2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  theme_bw() +
  TEMA_GROB_inset


t3_bis <- ggplot(db2, aes(x=as.factor(Year),y=Temp_span)) +
  geom_violin(trim=FALSE,fill="grey80")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=2,colour = "#E69F00") +
  ylab("Reference list temporal span (years)") +
  xlab("")+
  theme_bw() +
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  annotate(geom="text", x=2, y=900,size=6, label="(d)",
           color="black",fontface="bold")+
  
  TEMA2_inset+
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")
# 

T3 = t3_bis + annotation_custom(ggplotGrob(t3),xmin=10,xmax=15,ymin=650,ymax=950)

T3




## self
M5 <- lme(Self ~ Year,
          random = list(Journal=~1),
          data = db2, method = "ML")

summary(M5)


MyData_self2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_self2)
P <- X %*% fixef(M5)
MyData_self2$Fit    <- P  #Fitted values

t4 <- ggplot()  +
  geom_point(data = db2, aes(y = Self, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ggtitle(expression(paste("y= 1.79 - 0.0008x", italic("   R"^2)," = 0.02",sep='')))+
  
  geom_line(data = MyData_self2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  theme_bw() +
  TEMA_GROB_inset

t4_bis <- ggplot(db2, aes(x=as.factor(Year),y=Self)) +
  geom_violin(trim=FALSE,fill="grey80")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=2,colour = "#E69F00") +
  ylab("Proportion of self-citations") +
  annotate(geom="text", x=2, y=0.95,size=6, label="(e)",
           color="black",fontface="bold")+
  theme_bw() +
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  xlab("")+
  TEMA2_inset+
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")
# 

T4 = t4_bis + annotation_custom(ggplotGrob(t4),xmin=4,xmax=9,ymin=0.64,ymax=0.99)

T4

## immediancy
M6 <- lme(Immediancy ~ Year,
          random = list(Journal=~1),
          data = db2, method = "ML")

summary(M6)



MyData_imm2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_imm2)
P <- X %*% fixef(M6)
MyData_imm2$Fit    <- P  #Fitted values

t5 <- ggplot()  +
  geom_point(data = db2, aes(y = Self, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  geom_line(data = MyData_imm2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  ggtitle(expression(paste("y= 2.31 - 0.001x", italic("   R"^2)," = 0.10",sep='')))+
  
  theme_bw() +
  TEMA_GROB_inset

t5_bis <- ggplot(db2, aes(x=as.factor(Year),y=Immediancy)) +
  geom_violin(trim=FALSE,fill="grey80")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=2,colour = "#E69F00") +
  ylab("Proportion of recent paper cited") +
  xlab("")+
  annotate(geom="text", x=2, y=1.1,size=6, label="(f)",
           color="black",fontface="bold")+
  theme_bw() +
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  ylim(0,1.2)+
  TEMA2_inset+
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")
# 

T5 = t5_bis + annotation_custom(ggplotGrob(t5),xmin=6,xmax=11,ymin=0.9,ymax=1.28)

T5



####### Total IF
M7<- lme(total_IF ~ Year,
          random = list(Journal=~1),
          data = db2)

summary(M7)

MyData_IF2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_IF2)
P <- X %*% fixef(M7)
MyData_IF2$Fit    <- P  #Fitted values

t6 <- ggplot()  +
  geom_point(data = db2, aes(y = total_IF, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  
  ggtitle(expression(paste("y= -303.69 - 0.15x", italic("   R"^2)," = 0.23",sep='')))+
  
  geom_line(data = MyData_IF2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  theme_bw() +
  TEMA_GROB


t6_bis <- ggplot(db2, aes(x=as.factor(Year),y=total_IF)) +
  geom_violin(trim=FALSE,fill="grey80")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=2,colour = "#E69F00") +
  annotate(geom="text", x=20, y=30,size=8, label="(a)",
           color="black",fontface="bold")+
  
  ylab("Total Impact Factor (proportion)") +
  xlab("")+
  theme_bw() +
  
  
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  TEMA2+
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")
# 

T6 = t6_bis + annotation_custom(ggplotGrob(t6),xmin=9,xmax=14,ymin=22,ymax=32)

T6

mean(db2[db2$Year== 1997,]$total_IF,na.rm=T)
sd (db2[db2$Year== 1997,]$total_IF,na.rm=T)


mean(db2[db2$Year== 2017,]$total_IF,na.rm=T)
sd (db2[db2$Year== 2017,]$total_IF,na.rm=T)


####### Seminality
M8<- lme(Seminality ~ Year,
         random = list(Journal=~1),
         data = db2, method = "ML")

summary(M8)

MyData_Semi2 <- expand.grid(Year = seq(range(db2$Year)[1], range(db2$Year)[2], length = 200))
X <- model.matrix(~ Year,data = MyData_Semi2)
P <- X %*% fixef(M8)
MyData_Semi2$Fit    <- P  #Fitted values

t7 <- ggplot()  +
  geom_point(data = db2, aes(y = Seminality, x = Year),
             shape = 16, 
             size = 1,
             col="grey30",
             alpha=0.7)+
  ggtitle(expression(paste("y= 0.22 - 0.0001x", italic("   R"^2),"= 0.05",sep='')))+
  
  geom_line(data = MyData_Semi2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  theme_bw() +
  TEMA_GROB_inset

t7_bis <- ggplot(db2, aes(x=as.factor(Year),y=Seminality)) +
  geom_violin(trim=FALSE,fill="grey80")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=2,colour = "#E69F00") +
  ylab("Seminality index") +
  annotate(geom="text", x=2, y=0.33,size=6, label="(g)",
           color="black",fontface="bold")+
  theme_bw() +
  xlab("")+
  #geom_line(data = MyData_size2, aes(x = Year, y = Fit), size=1, colour = "#E69F00") +
  TEMA2_inset+
  stat_summary(fun.data=data_summary,
               geom="pointrange", color="black")
# 

T7 = t7_bis + annotation_custom(ggplotGrob(t7),xmin=8,xmax=13,ymin=0.19,ymax=0.32)


T7



TEMPORAL=grid.arrange(T1,T2,T3,T4,T5,T6,T7,ncol=3)

TEMPORAL_sign=grid.arrange(T1,T2,T6,ncol=2)


pdf("/Users/stefanomammola/Desktop/Figure_3.pdf",width=20,height=14,paper='special')


lay <- rbind(c(1,1,2,2),
             c(1,1,2,2),
             c(3,3,4,5),
             c(3,3,6,7))
grid.arrange(T6,T2,T1,T3,T4,T5,T7, layout_matrix = lay)

dev.off()
##########################################

library(MuMIn)
summary(M6)
r.squaredGLMM(M1)[2] #global
r.squaredGLMM(M2)[2] #Size
r.squaredGLMM(M3)[2] #Non_isi
r.squaredGLMM(M4)[2] #Temp_span
r.squaredGLMM(M5)[2] #Self
r.squaredGLMM(M6)[2] #Immediancy
r.squaredGLMM(M7)[2] #IF 
r.squaredGLMM(M8)[2] #Semin


??r.squaredGLMM


