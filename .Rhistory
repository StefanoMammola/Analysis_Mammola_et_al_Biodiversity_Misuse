db_impact <- cbind(db_impact,country_diversity)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
#Random factor levels
nlevels(db_impact$journal)
# Checking outliers
#dotchart(db_impact$Biodiversity) #1 outliers
db_impact$Biodiversity <- scale(log(db_impact$Biodiversity+1)) #log transform
#Check outliers
par(mar= c(rep(2,4)))
#dotchart(db_impact$citation_residuals)  #1 outlier
db_cit <- db_impact %>% filter(citation_residuals < 150) #removing outlier
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
n_aut +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
check_collinearity(m3)
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey5", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Citations [residuals]",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey5")) + coord_flip()
)
performance::r2(m3)
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]])
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(split, which = c("both"))
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i
diversity_i <- unique(diversity_i)
diversity_i
country_diversity <- c()
for(i in 1:nrow(db_impact)){
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i <- unique(diversity_i)
country_diversity <- append(country_diversity, length(diversity_i))}
db_impact <- cbind(db_impact,country_diversity)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
db2$bio <- db2$Biodiversity_prop*56
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity = bio,
Moderators = Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal,
author_country) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor) %>%
mutate_at(vars(author_country), as.character) %>%
mutate_at(vars(n_aut, year), scale)
country_diversity <- c()
for(i in 1:nrow(db_impact)){
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i <- unique(diversity_i)
country_diversity <- append(country_diversity, length(diversity_i))}
db_impact <- cbind(db_impact,country_diversity)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
#Random factor levels
nlevels(db_impact$journal)
# Checking outliers
#dotchart(db_impact$Biodiversity) #1 outliers
db_impact$Biodiversity <- scale(log(db_impact$Biodiversity+1)) #log transform
#Check outliers
par(mar= c(rep(2,4)))
#dotchart(db_impact$citation_residuals)  #1 outlier
db_cit <- db_impact %>% filter(citation_residuals < 150) #removing outlier
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
n_aut +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey5", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Citations [residuals]",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey5")) + coord_flip()
)
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey5", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Citations [residuals]",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey5")) + coord_flip()
)
db_impact <- cbind(db_impact,country_diversity) %>%  mutate_at(vars(country_diversity), scale)
db_impact <- db_impact %>% select() %>% mutate_at(vars(country_diversity), scale)
db_impact <- db_impact %>% select(country_diversity) %>% mutate_at(vars(country_diversity), scale)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db2$bio <- db2$Biodiversity_prop*56
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity = bio,
Moderators = Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal,
author_country) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor) %>%
mutate_at(vars(author_country), as.character) %>%
mutate_at(vars(n_aut, year), scale)
# Chcking NÂ° of coutnris in the reference list
country_diversity <- c()
for(i in 1:nrow(db_impact)){
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i <- unique(diversity_i)
country_diversity <- append(country_diversity, length(diversity_i))}
db_impact <- cbind(db_impact,country_diversity)
db_impact <- db_impact %>% select(country_diversity) %>% mutate_at(vars(country_diversity), scale)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
db2$bio <- db2$Biodiversity_prop*56
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity = bio,
Moderators = Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal,
author_country) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor) %>%
mutate_at(vars(author_country), as.character) %>%
mutate_at(vars(n_aut, year), scale)
country_diversity <- c()
for(i in 1:nrow(db_impact)){
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i <- unique(diversity_i)
country_diversity <- append(country_diversity, length(diversity_i))}
db_impact <- cbind(db_impact,country_diversity)
db_impact <- db_impact %>% select(country_diversity) %>% mutate_at(vars(country_diversity), scale)
db_impact
db_impact <- db_impact %>% mutate_at(vars(country_diversity), scale)
db_impact
db2$bio <- db2$Biodiversity_prop*56
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity = bio,
Moderators = Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal,
author_country) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor) %>%
mutate_at(vars(author_country), as.character) %>%
mutate_at(vars(n_aut, year), scale)
# Chcking NÂ° of coutnris in the reference list
country_diversity <- c()
for(i in 1:nrow(db_impact)){
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i <- unique(diversity_i)
country_diversity <- append(country_diversity, length(diversity_i))}
db_impact <- cbind(db_impact,country_diversity)
db_impact <- db_impact %>% mutate_at(vars(country_diversity), scale)
db_impact
db_impact <- db_impact %>% mutate_at(vars(country_diversity), scale) ; rm(country_diversity, i, diversity_i)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
#Random factor levels
nlevels(db_impact$journal)
# Checking outliers
#dotchart(db_impact$Biodiversity) #1 outliers
db_impact$Biodiversity <- scale(log(db_impact$Biodiversity+1)) #log transform
db2$bio <- db2$Biodiversity_prop*56
db_impact <- db2 %>% select(year = Publication_year,
Altmetrics,
cit = tot_cites,
Altmetrics_residuals,
citation_residuals,
Biodiversity = bio,
Moderators = Title_adjecties,
Title_geo,
Title_taxon,
Title_hab,
n_aut,
journal,
author_country) %>%
mutate_at(vars(starts_with("Title_"), journal), as_factor) %>%
mutate_at(vars(author_country), as.character) %>%
mutate_at(vars(n_aut, year), scale)
country_diversity <- c()
for(i in 1:nrow(db_impact)){
diversity_i <- strsplit(db_impact[i,]$author_country, split = ";")[[1]]
diversity_i <- trimws(diversity_i, which = c("both"))
diversity_i <- unique(diversity_i)
country_diversity <- append(country_diversity, length(diversity_i))}
db_impact <- cbind(db_impact,country_diversity)
db_impact <- db_impact %>% mutate_at(vars(country_diversity), scale) ; rm(country_diversity, i, diversity_i)
# Setting baseline
levels(db_impact$Title_taxon) <- c("Mention","No mention")
levels(db_impact$Title_hab)   <- c("Mention","No mention")
levels(db_impact$Title_geo)   <- c("Mention","No mention")
levels(db_impact$Moderators)  <- c("None","One moderator", "Two moderators", "Three moderators")
db_impact <- within(db_impact, Title_geo   <- relevel(Title_geo, ref = "Mention"))
db_impact <- within(db_impact, Title_taxon <- relevel(Title_taxon, ref = "Mention"))
db_impact <- within(db_impact, Title_hab   <- relevel(Title_hab, ref = "Mention"))
#Random factor levels
nlevels(db_impact$journal)
# Checking outliers
#dotchart(db_impact$Biodiversity) #1 outliers
db_impact$Biodiversity <- scale(log(db_impact$Biodiversity+1)) #log transform
db_impact$country_diversity
cor(db_impact$n_aut, db_impact$country_diversity)
# NÂ° of authors and conutrey diversity are highly collinear
cor(db_impact$n_aut, db_impact$country_diversity)
#Check outliers
par(mar= c(rep(2,4)))
#dotchart(db_impact$citation_residuals)  #1 outlier
db_cit <- db_impact %>% filter(citation_residuals < 150) #removing outlier
model_3 <- as.formula("citation_residuals ~ Title_geo +
Title_taxon +
Title_hab +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
m3  <- lme4::lmer(model_3, data = db_impact)
parameters(m3)
check_collinearity(m3)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey5", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Citations [residuals]",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey5")) + coord_flip()
)
# Check the interaction
(plot_interaction1 <- db_cit %>% ggplot2::ggplot(aes(x = Biodiversity, y = citation_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Citations [residuals]",
title = NULL)+ theme_custom())
db_alt <- na.omit(db_impact)
# Checking outliers
par(mar= c(rep(2,4)))
dotchart(db_alt$Altmetrics_residuals) # OK
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
diversity +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
db_alt <- na.omit(db_impact)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::r2(m3)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
n_aut +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::r2(m3)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::r2(m3)
# Estract estimates
Estimates_m3 <-
m3 %>%
summary %>%
magrittr::extract2("coefficients") %>% # extract estimates
as.data.frame %>% rownames_to_column("Variable") %>%
dplyr::filter(!row_number() %in% 1) %>%  #remove intercept
dplyr::rename(SE = 3, t = 4) #rename
(plot_model3 <- ggplot2::ggplot(data = Estimates_m3) +
geom_pointrange(aes(x = Variable,
y = Estimate,
ymin = Estimate-SE,
ymax = Estimate+SE), col = "grey5", size = 0.5) +
geom_hline(lty = 3, size = 0.7, col = "grey50", yintercept = 0) +
geom_text(aes(Variable, Estimate), label = round(Estimates_m3$Estimate,2),
vjust = -1, size = 3, col = "grey5") +
labs(title = "Altmetric score",
y = expression(paste("Estimate beta" %+-% "Standard Error")),
x = NULL)+
theme_custom() + theme(axis.text.y  = element_text(colour = "grey5")) + coord_flip()
)
# Check the interaction
(plot_interaction1 <- db_alt %>% ggplot2::ggplot(aes(x = Biodiversity, y = Altmetrics_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 2, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Altmetric score [residuals]",
title = NULL)+ theme_custom())
# Check the interaction
(plot_interaction1 <- db_alt %>% ggplot2::ggplot(aes(x = Biodiversity, y = Altmetrics_residuals)) +
facet_wrap( ~ Moderators, nrow = 2, ncol = 2) +
geom_point(col = "grey10", fill = "grey30", size = 5, shape = 21, alpha = 0.3)+
geom_smooth(method = "lm",  se = TRUE, col = "blue", fill = "blue",
formula = y ~ x) +
labs(x = "Sampled biodiversity [log-transformed]",
y = "Altmetric score [residuals]",
title = NULL)+ theme_custom())
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
country_diversity +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::r2(m3)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
country_diversity +
Biodiversity +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::r2(m3)
# Set formula
model_3 <- as.formula("Altmetrics_residuals ~
Title_geo +
Title_taxon +
Title_hab +
country_diversity +
Biodiversity : Moderators +
(1|journal)")
# Initial model
m3 <- lme4::lmer(model_3, data = db_alt)
performance::r2(m3)
parameters::parameters(m3)
(2688.5-30*30/2) / (30*30(30+30+1))/12
(2688.5-30*30/2) / ((30*30)*(30+30+1))/12
(2688.5-(30*30/2)) / ((30*30)*(30+30+1))/12
(2688.5-(60*60/2)) / ((60*60)*(60+60+1))/12
(2688.5-(60*60/2)) / (60*60)*(60+60+1)/12
U  = 2688.5
n1 = 31
n2 = 30
(2688.5-(n1*n1/2)) / (n1*n1)*(n1+n1+1)/12
> = (2688.5-(n1*n1/2)) / (n1*n1)*(n1+n1+1)/12
U  = 2688.5
n1 = 90
n2 = 61
Z = (U-(n1*n1/2)) / (n1*n1)*(n1+n1+1)/12
Z
r = Z/sqrt(90+61)
r
